{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,6LAAC;QAAI,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E;KANS"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/card.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\r\n    {...props} />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props} />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)}\r\n    {...props} />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props} />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props} />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACtD,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,4DAA4D;QACzE,GAAG,KAAK;;;;;;;AAEb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC3D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sDAAsD;QACnE,GAAG,KAAK;;;;;;;AAEb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACjE,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAEb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC7D,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAAC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAEb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/%28jobs%29/jobs/%5BjobId%5D/page.js"],"sourcesContent":["// \"use client\";\r\n// import { useEffect, useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import moment from \"moment\";\r\n// import { APPLICATION_API_ENDPOINT, JOB_API_ENDPOINT } from \"@/lib/constant\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { useParams, useRouter } from \"next/navigation\";\r\n// import { Badge } from \"@/components/ui/badge\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { toast } from \"sonner\";\r\n// import { setSingleJob } from \"@/redux/slices/jobSlice\";\r\n\r\n// const JobDescription = () => {\r\n//   const { singleJob } = useSelector((state) => state.job);\r\n//   const { user } = useSelector((state) => state.auth);\r\n//   const isInitiallyApplied =\r\n//     singleJob?.applications?.some(\r\n//       (application) => application.applicant === user?._id\r\n//     ) || false;\r\n//   const [isApplied, setIsApplied] = useState(isInitiallyApplied);\r\n\r\n//   const params = useParams();\r\n//   const jobId = params.jobId;\r\n\r\n//   const router = useRouter();\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const applyJobHandler = async () => {\r\n//     if (!user) {\r\n//       router.push(\"/login\");\r\n//     }\r\n//     try {\r\n//       const res = await axios.get(\r\n//         `${APPLICATION_API_ENDPOINT}/apply/${jobId}`,\r\n//         { withCredentials: true }\r\n//       );\r\n//       if (res.data.success) {\r\n//         setIsApplied(true);\r\n//         const updateSingleJob = {\r\n//           ...singleJob,\r\n//           applications: [...singleJob.applications, { applicant: user?._id }],\r\n//         };\r\n//         dispatch(setSingleJob(updateSingleJob));\r\n//         toast.success(res.data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//       toast.error(error.response.data.message);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchSingleJob = async () => {\r\n//       try {\r\n//         const res = await axios.get(`${JOB_API_ENDPOINT}/get/${jobId}`, {\r\n//           withCredentials: true,\r\n//         });\r\n\r\n//         if (res.data.success) {\r\n//           dispatch(setSingleJob(res.data.job));\r\n//           setIsApplied(\r\n//             res.data.job.applications?.some(\r\n//               (application) => application.applicant === user?._id\r\n//             ) || false\r\n//           );\r\n//         }\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     };\r\n//     fetchSingleJob();\r\n//   }, [jobId, dispatch, user?._id]);\r\n\r\n//   if (!singleJob) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <section className=\"wrapper my-10 px-4 xl:px-0\">\r\n//       {/* Job Title */}\r\n//       <h2 className=\"font-bold text-2xl text-gray-800 mb-6\">\r\n//         {singleJob?.title}\r\n//       </h2>\r\n\r\n//       {/* Badges and Button */}\r\n//       <div className=\"flex flex-wrap items-center justify-between gap-4\">\r\n//         {/* Badges */}\r\n//         <div className=\"flex flex-wrap items-center gap-3\">\r\n//           <Badge\r\n//             variant=\"secondary\"\r\n//             className=\"text-blue-700 font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n//           >\r\n//             {singleJob?.position} Positions\r\n//           </Badge>\r\n//           <Badge\r\n//             variant=\"secondary\"\r\n//             className=\"text-customRedColor font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n//           >\r\n//             {singleJob?.jobType}\r\n//           </Badge>\r\n//           <Badge\r\n//             variant=\"secondary\"\r\n//             className=\"text-customColor font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n//           >\r\n//             {singleJob?.salary} PKR\r\n//           </Badge>\r\n//         </div>\r\n\r\n//         {/* Apply Now Button */}\r\n//         <Button\r\n//           onClick={isApplied ? null : applyJobHandler}\r\n//           disabled={isApplied}\r\n//           className={`rounded-lg px-6 py-2 text-white transition-all ${\r\n//             isApplied\r\n//               ? \"bg-gray-400 cursor-not-allowed\"\r\n//               : \"bg-purple-700 hover:bg-purple-800\"\r\n//           }`}\r\n//         >\r\n//           {isApplied ? \"Already Applied\" : \"Apply Now\"}\r\n//         </Button>\r\n//       </div>\r\n\r\n//       {/* Job Details */}\r\n//       <div className=\"mt-8\">\r\n//         <p className=\"border-b-2 border-gray-300 font-medium text-lg pb-2\">\r\n//           Job Details\r\n//         </p>\r\n//         <div className=\"mt-4 space-y-3\">\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Role:{\" \"}\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.title}\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Location:{\" \"}\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.location}\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Description:{\" \"}\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.description}\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Experience:{\" \"}\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.experienceLevel} years\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Salary:{\" \"}\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.salary}\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Total Applications:\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.applications?.length || 0}\r\n//             </span>\r\n//           </p>\r\n//           <p className=\"font-semibold text-gray-700\">\r\n//             Posted Date:\r\n//             <span className=\"pl-4 font-normal text-gray-800\">\r\n//               {singleJob?.createdAt\r\n//                 ? moment(singleJob?.createdAt).format(\"DD MMM YYYY\")\r\n//                 : \"N/A\"}\r\n//             </span>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default JobDescription;\r\n\r\n\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { APPLICATION_API_ENDPOINT, JOB_API_ENDPOINT } from \"@/lib/constant\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport {\r\n  Briefcase,\r\n  MapPin,\r\n  Calendar,\r\n  Users,\r\n  DollarSign,\r\n  Clock,\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { toast } from \"sonner\";\r\nimport { setSingleJob } from \"@/redux/slices/jobSlice\";\r\n\r\nconst JobDescription = () => {\r\n  const { singleJob } = useSelector((state) => state.job);\r\n  const { user } = useSelector((state) => state.auth);\r\n  const isInitiallyApplied =\r\n    singleJob?.applications?.some(\r\n      (application) => application.applicant === user?._id\r\n    ) || false;\r\n  const [isApplied, setIsApplied] = useState(isInitiallyApplied);\r\n\r\n  const params = useParams();\r\n  const jobId = params.jobId;\r\n\r\n  const router = useRouter();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const applyJobHandler = async () => {\r\n    if (!user) {\r\n      router.push(\"/login\");\r\n    }\r\n    try {\r\n      const res = await axios.get(\r\n        `${APPLICATION_API_ENDPOINT}/apply/${jobId}`,\r\n        { withCredentials: true }\r\n      );\r\n      if (res.data.success) {\r\n        setIsApplied(true);\r\n        const updateSingleJob = {\r\n          ...singleJob,\r\n          applications: [...singleJob.applications, { applicant: user?._id }],\r\n        };\r\n        dispatch(setSingleJob(updateSingleJob));\r\n        toast.success(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSingleJob = async () => {\r\n      try {\r\n        const res = await axios.get(`${JOB_API_ENDPOINT}/get/${jobId}`, {\r\n          withCredentials: true,\r\n        });\r\n\r\n        if (res.data.success) {\r\n          dispatch(setSingleJob(res.data.job));\r\n          setIsApplied(\r\n            res.data.job.applications?.some(\r\n              (application) => application.applicant === user?._id\r\n            ) || false\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchSingleJob();\r\n  }, [jobId, dispatch, user?._id]);\r\n\r\n  if (!singleJob) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"max-w-5xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\r\n      <Card className=\"overflow-hidden bg-white shadow-xl rounded-xl hover:shadow-2xl transition-shadow duration-300\">\r\n        <CardContent className=\"p-8\">\r\n          {/* Header with Company Info */}\r\n          <div className=\"flex flex-col md:flex-row items-start md:items-center gap-6 pb-6 border-b border-gray-100\">\r\n            <div className=\"h-16 w-16 bg-purple-100 rounded-xl flex items-center justify-center\">\r\n              <Briefcase className=\"h-8 w-8 text-purple-600\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-2 leading-tight\">\r\n                {singleJob?.title}\r\n              </h2>\r\n              <div className=\"flex flex-wrap items-center gap-4 text-gray-600\">\r\n                <div className=\"flex items-center gap-1\">\r\n                  <MapPin className=\"h-4 w-4\" />\r\n                  <span>{singleJob?.location}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-1\">\r\n                  <Calendar className=\"h-4 w-4\" />\r\n                  <span>\r\n                    {singleJob?.createdAt\r\n                      ? new Date(singleJob.createdAt).toLocaleDateString(\r\n                          \"en-US\",\r\n                          {\r\n                            day: \"numeric\",\r\n                            month: \"long\",\r\n                            year: \"numeric\",\r\n                          }\r\n                        )\r\n                      : \"N/A\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              onClick={isApplied ? null : applyJobHandler}\r\n              disabled={isApplied}\r\n              className={`w-full md:w-auto rounded-xl px-8 py-3 text-white transition-all transform hover:scale-105 ${\r\n                isApplied\r\n                  ? \"bg-gray-400 cursor-not-allowed\"\r\n                  : \"bg-purple-600 hover:bg-purple-700 shadow-lg hover:shadow-purple-200\"\r\n              }`}\r\n            >\r\n              {isApplied ? (\r\n                <span className=\"flex items-center gap-2\">\r\n                  <Users className=\"h-5 w-5\" />\r\n                  Already Applied\r\n                </span>\r\n              ) : (\r\n                <span className=\"flex items-center gap-2\">\r\n                  <Briefcase className=\"h-5 w-5\" />\r\n                  Apply Now\r\n                </span>\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Key Information Badges */}\r\n          <div className=\"py-6 border-b border-gray-100\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"bg-blue-50 rounded-xl p-4 hover:bg-blue-100 transition-colors\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Users className=\"h-5 w-5 text-blue-600\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-blue-600 font-medium\">\r\n                      Positions\r\n                    </p>\r\n                    <p className=\"text-lg font-semibold text-blue-700\">\r\n                      {singleJob?.position}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-green-50 rounded-xl p-4 hover:bg-green-100 transition-colors\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <DollarSign className=\"h-5 w-5 text-green-600\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-green-600 font-medium\">Salary</p>\r\n                    <p className=\"text-lg font-semibold text-green-700\">\r\n                      {singleJob?.salary} PKR\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-purple-50 rounded-xl p-4 hover:bg-purple-100 transition-colors\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <Clock className=\"h-5 w-5 text-purple-600\" />\r\n                  <div>\r\n                    <p className=\"text-sm text-purple-600 font-medium\">\r\n                      Job Type\r\n                    </p>\r\n                    <p className=\"text-lg font-semibold text-purple-700\">\r\n                      {singleJob?.jobType}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Detailed Information */}\r\n          <div className=\"mt-8\">\r\n            <h3 className=\"text-xl font-bold text-gray-900 mb-6\">\r\n              Job Details\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n              <div className=\"space-y-6\">\r\n                <DetailItem\r\n                  icon={<Briefcase className=\"h-5 w-5 text-gray-400\" />}\r\n                  label=\"Experience Required\"\r\n                  value={`${singleJob?.experienceLevel} years`}\r\n                />\r\n                <DetailItem\r\n                  icon={<Users className=\"h-5 w-5 text-gray-400\" />}\r\n                  label=\"Total Applications\"\r\n                  value={singleJob?.applications?.length || 0}\r\n                />\r\n              </div>\r\n              <div className=\"space-y-6\">\r\n                <DetailItem\r\n                  icon={<MapPin className=\"h-5 w-5 text-gray-400\" />}\r\n                  label=\"Location\"\r\n                  value={singleJob?.location}\r\n                />\r\n                <DetailItem\r\n                  icon={<Calendar className=\"h-5 w-5 text-gray-400\" />}\r\n                  label=\"Posted Date\"\r\n                  value={\r\n                    singleJob?.createdAt\r\n                      ? new Date(singleJob.createdAt).toLocaleDateString(\r\n                          \"en-US\",\r\n                          {\r\n                            day: \"numeric\",\r\n                            month: \"long\",\r\n                            year: \"numeric\",\r\n                          }\r\n                        )\r\n                      : \"N/A\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Description Section */}\r\n            <div className=\"mt-8\">\r\n              <h4 className=\"text-xl font-bold text-gray-900 mb-4\">\r\n                Job Description\r\n              </h4>\r\n              <div className=\"bg-gray-50 rounded-xl p-6 hover:bg-gray-100 transition-colors\">\r\n                <p className=\"text-gray-700 leading-relaxed\">\r\n                  {singleJob?.description}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </section>\r\n\r\n    // <section className=\"wrapper my-10 px-4 xl:px-0\">\r\n    //   {/* Job Title */}\r\n    //   <h2 className=\"font-bold text-2xl text-gray-800 mb-6\">\r\n    //     {singleJob?.title}\r\n    //   </h2>\r\n\r\n    //   {/* Badges and Button */}\r\n    //   <div className=\"flex flex-wrap items-center justify-between gap-4\">\r\n    //     {/* Badges */}\r\n    //     <div className=\"flex flex-wrap items-center gap-3\">\r\n    //       <Badge\r\n    //         variant=\"secondary\"\r\n    //         className=\"text-blue-700 font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n    //       >\r\n    //         {singleJob?.position} Positions\r\n    //       </Badge>\r\n    //       <Badge\r\n    //         variant=\"secondary\"\r\n    //         className=\"text-customRedColor font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n    //       >\r\n    //         {singleJob?.jobType}\r\n    //       </Badge>\r\n    //       <Badge\r\n    //         variant=\"secondary\"\r\n    //         className=\"text-customColor font-medium bg-gray-50 px-3 py-1 rounded-full hover:bg-none\"\r\n    //       >\r\n    //         {singleJob?.salary} PKR\r\n    //       </Badge>\r\n    //     </div>\r\n\r\n    //     {/* Apply Now Button */}\r\n    //     <Button\r\n    //       onClick={isApplied ? null : applyJobHandler}\r\n    //       disabled={isApplied}\r\n    //       className={`rounded-lg px-6 py-2 text-white transition-all ${\r\n    //         isApplied\r\n    //           ? \"bg-gray-400 cursor-not-allowed\"\r\n    //           : \"bg-purple-700 hover:bg-purple-800\"\r\n    //       }`}\r\n    //     >\r\n    //       {isApplied ? \"Already Applied\" : \"Apply Now\"}\r\n    //     </Button>\r\n    //   </div>\r\n\r\n    //   {/* Job Details */}\r\n    //   <div className=\"mt-8\">\r\n    //     <p className=\"border-b-2 border-gray-300 font-medium text-lg pb-2\">\r\n    //       Job Details\r\n    //     </p>\r\n    //     <div className=\"mt-4 space-y-3\">\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Role:{\" \"}\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.title}\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Location:{\" \"}\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.location}\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Description:{\" \"}\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.description}\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Experience:{\" \"}\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.experienceLevel} years\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Salary:{\" \"}\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.salary}\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Total Applications:\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.applications?.length || 0}\r\n    //         </span>\r\n    //       </p>\r\n    //       <p className=\"font-semibold text-gray-700\">\r\n    //         Posted Date:\r\n    //         <span className=\"pl-4 font-normal text-gray-800\">\r\n    //           {singleJob?.createdAt\r\n    //             ? moment(singleJob?.createdAt).format(\"DD MMM YYYY\")\r\n    //             : \"N/A\"}\r\n    //         </span>\r\n    //       </p>\r\n    //     </div>\r\n    //   </div>\r\n    // </section>\r\n  );\r\n};\r\n\r\nexport default JobDescription;\r\n\r\nconst DetailItem = ({ icon, label, value }) => (\r\n  <div className=\"flex items-start gap-3\">\r\n    {icon}\r\n    <div>\r\n      <dt className=\"text-sm font-medium text-gray-500 mb-1\">{label}</dt>\r\n      <dd className=\"text-base font-semibold text-gray-900\">{value}</dd>\r\n    </div>\r\n  </div>\r\n);\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 956, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}