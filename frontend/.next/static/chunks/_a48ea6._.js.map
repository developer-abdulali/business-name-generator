{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/auth/Login.jsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { setLoading, setUser } from \"@/redux/slices/authSlice\";\r\n// import { USER_API_ENDPOINT } from \"@/lib/constant\";\r\n// import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import Loading from \"../shared/Loading\";\r\n// import Link from \"next/link\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { toast } from \"sonner\";\r\n\r\n// const Login = () => {\r\n//   const router = useRouter();\r\n//   const dispatch = useDispatch();\r\n//   const [input, setInput] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     role: \"applicant\",\r\n//   });\r\n\r\n//   const { loading } = useSelector((state) => state.auth);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setInput({ ...input, [name]: value });\r\n//   };\r\n\r\n//   const submitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       dispatch(setLoading(true));\r\n//       // API call\r\n//       const res = await axios.post(`${USER_API_ENDPOINT}/login`, input, {\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         withCredentials: true,\r\n//       });\r\n\r\n//       if (res.data.success) {\r\n//         dispatch(setUser(res.data.user));\r\n//         router.push(\"/\");\r\n//         toast.success(res.data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(error.response?.data?.error || error.message);\r\n//       console.error(\"API error:\", error.response?.data?.error || error.message);\r\n//     } finally {\r\n//       dispatch(setLoading(false));\r\n//     }\r\n//   };\r\n//   return (\r\n//     <section className=\"flex min-h-screen items-center justify-center bg-gray-100\">\r\n//       <div className=\"mx-3 sm:mx-5 xl:mx-0 flex flex-col md:flex-row w-full max-w-6xl bg-white shadow-lg rounded-lg overflow-hidden\">\r\n//         <div className=\"w-full md:w-1/2 px-8 py-10\">\r\n//           <div className=\"flex flex-col items-center mb-8\">\r\n//             <div className=\"text-2xl font-bold\">\r\n//               Job<span className=\"text-customRedColor\">Portal</span>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <h2 className=\"mb-4 text-2xl font-bold text-center text-gray-800\">\r\n//             Sign in to your account\r\n//           </h2>\r\n//           <form onSubmit={submitHandler} className=\"space-y-4\">\r\n//             <div>\r\n//               <label\r\n//                 htmlFor=\"email\"\r\n//                 className=\"block mb-1 text-sm font-medium text-gray-700\"\r\n//               >\r\n//                 Email\r\n//               </label>\r\n//               <input\r\n//                 type=\"email\"\r\n//                 id=\"email\"\r\n//                 name=\"email\"\r\n//                 placeholder=\"example@example.com\"\r\n//                 value={input.email}\r\n//                 onChange={handleChange}\r\n//                 className=\"w-full px-3 py-2 border rounded-lg\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div>\r\n//               <label\r\n//                 htmlFor=\"password\"\r\n//                 className=\"block mb-1 text-sm font-medium text-gray-700\"\r\n//               >\r\n//                 Password\r\n//               </label>\r\n//               <input\r\n//                 type=\"password\"\r\n//                 id=\"password\"\r\n//                 name=\"password\"\r\n//                 placeholder=\"********\"\r\n//                 value={input.password}\r\n//                 onChange={handleChange}\r\n//                 className=\"w-full px-3 py-2 border rounded-lg\"\r\n//                 required\r\n//               />\r\n//             </div>\r\n//             <div className=\"flex justify-end\">\r\n//               <a href=\"#\" className=\"text-sm text-indigo-600\">\r\n//                 Forgot password?\r\n//               </a>\r\n//             </div>\r\n//             <div>\r\n//               <label\r\n//                 htmlFor=\"role\"\r\n//                 className=\"block mb-1 text-sm font-medium text-gray-700\"\r\n//               >\r\n//                 Role\r\n//               </label>\r\n//               <div className=\"flex space-x-4\">\r\n//                 <label className=\"flex items-center space-x-2\">\r\n//                   <input\r\n//                     type=\"radio\"\r\n//                     name=\"role\"\r\n//                     value=\"applicant\"\r\n//                     checked={input.role === \"applicant\"}\r\n//                     onChange={handleChange}\r\n//                     className=\"text-indigo-600 border-gray-300 rounded\"\r\n//                   />\r\n//                   <span>Applicant</span>\r\n//                 </label>\r\n//                 <label className=\"flex items-center space-x-2\">\r\n//                   <input\r\n//                     type=\"radio\"\r\n//                     name=\"role\"\r\n//                     value=\"recruiter\"\r\n//                     checked={input.role === \"recruiter\"}\r\n//                     onChange={handleChange}\r\n//                     className=\"text-indigo-600 border-gray-300 rounded\"\r\n//                   />\r\n//                   <span>Recruiter</span>\r\n//                 </label>\r\n//               </div>\r\n//             </div>\r\n//             {loading ? (\r\n//               <Loading />\r\n//             ) : (\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 className=\"w-full px-3 py-2 font-medium text-white rounded-lg bg-blue-700 hover:bg-blue-800\"\r\n//               >\r\n//                 Sign in\r\n//               </button>\r\n//             )}\r\n//             <div className=\"text-center\">\r\n//               <span className=\"text-sm text-gray-700\">\r\n//                 {`Don't have an account?`}{\" \"}\r\n//               </span>\r\n//               <Link href=\"/signup\" className=\"text-sm text-indigo-600\">\r\n//                 Sign up\r\n//               </Link>\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n//         <div className=\"hidden md:flex md:w-1/2\">\r\n//           <img\r\n//             src=\"/authimg.png\"\r\n//             alt=\"Desk setup\"\r\n//             className=\"object-cover w-full h-full rounded-r-lg\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\"use client\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"applicant\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n    console.log(\"User Type:\", userType);\r\n    // Add your login logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-blue-500 to-purple-600\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-gray-800\">\r\n          Login\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Enter your email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              placeholder=\"Enter your password\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Login As\r\n            </label>\r\n            <div className=\"flex items-center\">\r\n              <label className=\"inline-flex items-center mr-4\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"applicant\"\r\n                  checked={userType === \"applicant\"}\r\n                  onChange={() => setUserType(\"applicant\")}\r\n                  className=\"form-radio h-4 w-4 text-blue-600\"\r\n                />\r\n                <span className=\"ml-2 text-gray-700\">Applicant</span>\r\n              </label>\r\n              <label className=\"inline-flex items-center\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"recruiter\"\r\n                  checked={userType === \"recruiter\"}\r\n                  onChange={() => setUserType(\"recruiter\")}\r\n                  className=\"form-radio h-4 w-4 text-blue-600\"\r\n                />\r\n                <span className=\"ml-2 text-gray-700\">Recruiter</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}