{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Filters.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useState } from \"react\";\r\n// import { Label } from \"./ui/label\";\r\n// import { ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\n// const filterData = [\r\n//   {\r\n//     filterType: \"Location\",\r\n//     options: [\r\n//       \"Shikarpur\",\r\n//       \"Sukkur\",\r\n//       \"Hyderabad\",\r\n//       \"Karachi\",\r\n//       \"Islamabad\",\r\n//       \"Rawalpindi\",\r\n//       \"Lahore\",\r\n//       \"Multan\",\r\n//       \"Peshawar\",\r\n//       \"Bahawalpur\",\r\n//       \"Sargodha\",\r\n//     ],\r\n//   },\r\n//   {\r\n//     filterType: \"Job Type\",\r\n//     options: [\"Full Time\", \"Part Time\", \"Contract\", \"Internship\"],\r\n//   },\r\n//   {\r\n//     filterType: \"Experience\",\r\n//     options: [\"0-1 years\", \"1-2 years\", \"2-3 years\", \"3+ years\"],\r\n//   },\r\n//   {\r\n//     filterType: \"Salary\",\r\n//     options: [\"10-20k\", \"20-30k\", \"30-40k\", \"40-50k\", \"50-60k\", \"60-80k\"],\r\n//   },\r\n// ];\r\n\r\n// const Filters = ({ onFilterChange }) => {\r\n//   const [openFilters, setOpenFilters] = useState({});\r\n//   const [selectedFilters, setSelectedFilters] = useState({\r\n//     Location: [],\r\n//     \"Job Type\": [],\r\n//     Experience: [],\r\n//     Salary: [],\r\n//   });\r\n\r\n//   const toggleFilter = (filterType) => {\r\n//     setOpenFilters((prev) => ({\r\n//       ...prev,\r\n//       [filterType]: !prev[filterType],\r\n//     }));\r\n//   };\r\n\r\n//   const handleFilterSelect = (filterType, value) => {\r\n//     setSelectedFilters((prev) => {\r\n//       const updatedFilters = {\r\n//         ...prev,\r\n//         [filterType]: prev[filterType].includes(value)\r\n//           ? prev[filterType].filter((item) => item !== value)\r\n//           : [...prev[filterType], value],\r\n//       };\r\n//       onFilterChange(filterType.toLowerCase(), updatedFilters[filterType]);\r\n//       return updatedFilters;\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <p className=\"text-xl font-bold mb-3 text-gray-800\">Filters</p>\r\n//       <hr className=\"mb-4\" />\r\n\r\n//       {filterData.map((data, i) => (\r\n//         <div key={i} className=\"mb-4\">\r\n//           <div\r\n//             className=\"flex justify-between items-center cursor-pointer\"\r\n//             onClick={() => toggleFilter(data.filterType)}\r\n//           >\r\n//             <p className=\"font-semibold text-lg\">{data.filterType}</p>\r\n//             {openFilters[data.filterType] ? (\r\n//               <ChevronUp className=\"text-gray-600\" />\r\n//             ) : (\r\n//               <ChevronDown className=\"text-gray-600\" />\r\n//             )}\r\n//           </div>\r\n\r\n//           <div\r\n//             className={`overflow-hidden transition-all duration-300 ease-in-out ${\r\n//               openFilters[data.filterType] ? \"max-h-screen\" : \"max-h-0\"\r\n//             }`}\r\n//           >\r\n//             <div className=\"mt-2 space-y-2\">\r\n//               {data.options.map((item, index) => (\r\n//                 <div\r\n//                   key={`${data.filterType}-${index}`}\r\n//                   className=\"flex items-center space-x-2\"\r\n//                 >\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     id={`${data.filterType}-${item}`}\r\n//                     value={item}\r\n//                     checked={selectedFilters[data.filterType].includes(item)}\r\n//                     onChange={() => handleFilterSelect(data.filterType, item)}\r\n//                   />\r\n//                   <Label htmlFor={`${data.filterType}-${item}`}>{item}</Label>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Filters;\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Filters = ({ setJobs }) => {\r\n  const [filters, setFilters] = useState({ keyword: \"\", location: \"\" });\r\n\r\n  useEffect(() => {\r\n    // Fetch or filter jobs based on the filters state\r\n    const filteredJobs = []; // Replace with actual filtering logic\r\n    setJobs(filteredJobs); // âœ… Updating state inside useEffect, not during render\r\n  }, [filters, setJobs]); // Dependencies ensure it only runs when filters change\r\n\r\n  const handleFilterChange = (e) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"keyword\"\r\n        placeholder=\"Job title\"\r\n        value={filters.keyword}\r\n        onChange={handleFilterChange}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"location\"\r\n        placeholder=\"Location\"\r\n        value={filters.location}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,oCAAoC;AACpC,sCAAsC;AACtC,yDAAyD;AAEzD,uBAAuB;AACvB,MAAM;AACN,8BAA8B;AAC9B,iBAAiB;AACjB,qBAAqB;AACrB,kBAAkB;AAClB,qBAAqB;AACrB,mBAAmB;AACnB,qBAAqB;AACrB,sBAAsB;AACtB,kBAAkB;AAClB,kBAAkB;AAClB,oBAAoB;AACpB,sBAAsB;AACtB,oBAAoB;AACpB,SAAS;AACT,OAAO;AACP,MAAM;AACN,8BAA8B;AAC9B,qEAAqE;AACrE,OAAO;AACP,MAAM;AACN,gCAAgC;AAChC,oEAAoE;AACpE,OAAO;AACP,MAAM;AACN,4BAA4B;AAC5B,6EAA6E;AAC7E,OAAO;AACP,KAAK;AAEL,4CAA4C;AAC5C,wDAAwD;AACxD,6DAA6D;AAC7D,oBAAoB;AACpB,sBAAsB;AACtB,sBAAsB;AACtB,kBAAkB;AAClB,QAAQ;AAER,2CAA2C;AAC3C,kCAAkC;AAClC,iBAAiB;AACjB,yCAAyC;AACzC,WAAW;AACX,OAAO;AAEP,wDAAwD;AACxD,qCAAqC;AACrC,iCAAiC;AACjC,mBAAmB;AACnB,yDAAyD;AACzD,gEAAgE;AAChE,4CAA4C;AAC5C,WAAW;AACX,8EAA8E;AAC9E,+BAA+B;AAC/B,UAAU;AACV,OAAO;AAEP,aAAa;AACb,4BAA4B;AAC5B,wEAAwE;AACxE,gCAAgC;AAEhC,uCAAuC;AACvC,yCAAyC;AACzC,iBAAiB;AACjB,2EAA2E;AAC3E,4DAA4D;AAC5D,cAAc;AACd,yEAAyE;AACzE,gDAAgD;AAChD,wDAAwD;AACxD,oBAAoB;AACpB,0DAA0D;AAC1D,iBAAiB;AACjB,mBAAmB;AAEnB,iBAAiB;AACjB,qFAAqF;AACrF,0EAA0E;AAC1E,kBAAkB;AAClB,cAAc;AACd,+CAA+C;AAC/C,qDAAqD;AACrD,uBAAuB;AACvB,wDAAwD;AACxD,4DAA4D;AAC5D,oBAAoB;AACpB,2BAA2B;AAC3B,sCAAsC;AACtC,wDAAwD;AACxD,mCAAmC;AACnC,gFAAgF;AAChF,iFAAiF;AACjF,uBAAuB;AACvB,iFAAiF;AACjF,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,YAAY;AACZ,aAAa;AACb,OAAO;AACP,KAAK;AAEL,0BAA0B;;;;;AAE1B;;;AAEA,MAAM,UAAU,CAAC,EAAE,OAAO,EAAE;IAC1B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,SAAS;QAAI,UAAU;IAAG;IAEnE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,kDAAkD;QAClD,MAAM,eAAe,EAAE,EAAE,sCAAsC;QAC/D,QAAQ,eAAe,uDAAuD;IAChF,GAAG;QAAC;QAAS;KAAQ,GAAG,uDAAuD;IAE/E,MAAM,qBAAqB,CAAC;QAC1B,WAAW;YAAE,GAAG,OAAO;YAAE,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,KAAK;QAAC;IAC3D;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBACC,MAAK;gBACL,MAAK;gBACL,aAAY;gBACZ,OAAO,QAAQ,OAAO;gBACtB,UAAU;;;;;;0BAEZ,8OAAC;gBACC,MAAK;gBACL,MAAK;gBACL,aAAY;gBACZ,OAAO,QAAQ,QAAQ;gBACvB,UAAU;;;;;;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Jobs.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import useGetAllJobs from \"@/hooks/useGetAllJobs\";\r\n// import Filters from \"./Filters\";\r\n// import Job from \"./Job\";\r\n// import { ListFilter } from \"lucide-react\";\r\n\r\n// const Jobs = () => {\r\n//   const [showFilters, setShowFilters] = useState(false);\r\n//   const [filters, setFilters] = useState({\r\n//     location: [],\r\n//     jobType: [],\r\n//     experience: [],\r\n//     salary: [],\r\n//   });\r\n//   const { allJobs } = useSelector((state) => state.job);\r\n//   console.log(\"ALL JOBS\",allJobs);\r\n//   const { fetchAllJobs } = useGetAllJobs();\r\n\r\n//   useEffect(() => {\r\n//     fetchAllJobs();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       if (window.innerWidth >= 1024) {\r\n//         setShowFilters(true);\r\n//       } else {\r\n//         setShowFilters(false);\r\n//       }\r\n//     };\r\n\r\n//     handleResize();\r\n//     window.addEventListener(\"resize\", handleResize);\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"resize\", handleResize);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleFilterChange = (filterType, value) => {\r\n//     setFilters((prevFilters) => ({\r\n//       ...prevFilters,\r\n//       [filterType]: value,\r\n//     }));\r\n//   };\r\n\r\n//   const filterJobs = () => {\r\n//     return allJobs.filter((job) => {\r\n//       const matchesLocation =\r\n//         filters.location.length === 0 ||\r\n//         filters.location.includes(job.location);\r\n//       const matchesJobType =\r\n//         filters.jobType.length === 0 || filters.jobType.includes(job.jobType);\r\n//       const matchesExperience =\r\n//         filters.experience.length === 0 ||\r\n//         filters.experience.includes(job.experienceLevel.toString());\r\n//       const matchesSalary =\r\n//         filters.salary.length === 0 ||\r\n//         filters.salary.some((range) => {\r\n//           const [min, max] = range.split(\"-\").map(Number);\r\n//           return job.salary >= min && job.salary <= max;\r\n//         });\r\n\r\n//       return (\r\n//         matchesLocation && matchesJobType && matchesExperience && matchesSalary\r\n//       );\r\n//     });\r\n//   };\r\n\r\n//   const filteredJobs = filterJobs();\r\n\r\n//   return (\r\n//     <section className=\"min-h-screen wrapper px-4 xl:px-0 py-8\">\r\n//       <div className=\"flex items-center justify-between\">\r\n//         <p className=\"text-3xl font-bold mb-5 text-gray-800\">Job Listings</p>\r\n//         <span\r\n//           onClick={() => setShowFilters((prev) => !prev)}\r\n//           className=\"cursor-pointer lg:hidden\"\r\n//         >\r\n//           <ListFilter size={28} />\r\n//         </span>\r\n//       </div>\r\n//       <div className=\"flex flex-col lg:flex-row gap-4\">\r\n//         <div\r\n//           className={`transform transition-all duration-300 ease-in-out ${\r\n//             showFilters\r\n//               ? \"opacity-100 translate-x-0 block\"\r\n//               : \"opacity-0 -translate-x-full hidden lg:block\"\r\n//           } w-full lg:w-1/4 bg-white p-4 rounded-lg border`}\r\n//         >\r\n//           <Filters onFilterChange={handleFilterChange} />\r\n//         </div>\r\n\r\n//         <div className=\"flex-1\">\r\n//           {filteredJobs.length === 0 ? (\r\n//             <div className=\"text-center py-10\">\r\n//               <span className=\"text-xl text-gray-600\">No jobs found</span>\r\n//             </div>\r\n//           ) : (\r\n//             <div\r\n//               className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4 overflow-auto scrollable-content\"\r\n//               style={{ maxHeight: \"calc(100vh - 200px)\" }}\r\n//             >\r\n//               {filteredJobs.map((job) => (\r\n//                 <Job key={job._id} job={job} />\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Jobs;\r\n\r\nimport { useState } from \"react\";\r\nimport Filters from \"./Filters\";\r\n\r\nconst Jobs = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  return (\r\n    <section>\r\n      <Filters setJobs={setJobs} />\r\n      <div>\r\n        {jobs.length > 0 ? (\r\n          jobs.map((job) => <div key={job.id}>{job.title}</div>)\r\n        ) : (\r\n          <p>No jobs found</p>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,+CAA+C;AAC/C,6CAA6C;AAC7C,qDAAqD;AACrD,mCAAmC;AACnC,2BAA2B;AAC3B,6CAA6C;AAE7C,uBAAuB;AACvB,2DAA2D;AAC3D,6CAA6C;AAC7C,oBAAoB;AACpB,mBAAmB;AACnB,sBAAsB;AACtB,kBAAkB;AAClB,QAAQ;AACR,2DAA2D;AAC3D,qCAAqC;AACrC,8CAA8C;AAE9C,sBAAsB;AACtB,sBAAsB;AACtB,YAAY;AAEZ,sBAAsB;AACtB,mCAAmC;AACnC,yCAAyC;AACzC,gCAAgC;AAChC,iBAAiB;AACjB,iCAAiC;AACjC,UAAU;AACV,SAAS;AAET,sBAAsB;AACtB,uDAAuD;AAEvD,qBAAqB;AACrB,4DAA4D;AAC5D,SAAS;AACT,YAAY;AAEZ,wDAAwD;AACxD,qCAAqC;AACrC,wBAAwB;AACxB,6BAA6B;AAC7B,WAAW;AACX,OAAO;AAEP,+BAA+B;AAC/B,uCAAuC;AACvC,gCAAgC;AAChC,2CAA2C;AAC3C,mDAAmD;AACnD,+BAA+B;AAC/B,iFAAiF;AACjF,kCAAkC;AAClC,6CAA6C;AAC7C,uEAAuE;AACvE,8BAA8B;AAC9B,yCAAyC;AACzC,2CAA2C;AAC3C,6DAA6D;AAC7D,2DAA2D;AAC3D,cAAc;AAEd,iBAAiB;AACjB,kFAAkF;AAClF,WAAW;AACX,UAAU;AACV,OAAO;AAEP,uCAAuC;AAEvC,aAAa;AACb,mEAAmE;AACnE,4DAA4D;AAC5D,gFAAgF;AAChF,gBAAgB;AAChB,4DAA4D;AAC5D,iDAAiD;AACjD,YAAY;AACZ,qCAAqC;AACrC,kBAAkB;AAClB,eAAe;AACf,0DAA0D;AAC1D,eAAe;AACf,6EAA6E;AAC7E,0BAA0B;AAC1B,oDAAoD;AACpD,gEAAgE;AAChE,+DAA+D;AAC/D,YAAY;AACZ,4DAA4D;AAC5D,iBAAiB;AAEjB,mCAAmC;AACnC,2CAA2C;AAC3C,kDAAkD;AAClD,6EAA6E;AAC7E,qBAAqB;AACrB,kBAAkB;AAClB,mBAAmB;AACnB,iIAAiI;AACjI,6DAA6D;AAC7D,gBAAgB;AAChB,6CAA6C;AAC7C,kDAAkD;AAClD,oBAAoB;AACpB,qBAAqB;AACrB,eAAe;AACf,iBAAiB;AACjB,eAAe;AACf,iBAAiB;AACjB,OAAO;AACP,KAAK;AAEL,uBAAuB;;;;;AAEvB;AACA;;;;AAEA,MAAM,OAAO;IACX,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEnC,qBACE,8OAAC;;0BACC,8OAAC,sHAAA,CAAA,UAAO;gBAAC,SAAS;;;;;;0BAClB,8OAAC;0BACE,KAAK,MAAM,GAAG,IACb,KAAK,GAAG,CAAC,CAAC,oBAAQ,8OAAC;kCAAkB,IAAI,KAAK;uBAAlB,IAAI,EAAE;;;;8CAElC,8OAAC;8BAAE;;;;;;;;;;;;;;;;;AAKb;uCAEe"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/jobs/page.jsx"],"sourcesContent":["import Jobs from \"@/components/Jobs\";\r\n\r\nconst JobsPage = () => {\r\n  return (\r\n    <>\r\n      <Jobs />\r\n    </>\r\n  );\r\n};\r\nexport default JobsPage;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,qBACE;kBACE,cAAA,8OAAC,mHAAA,CAAA,UAAI;;;;;;AAGX;uCACe"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}