{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Filters.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useState } from \"react\";\r\n// import { RadioGroup, RadioGroupItem } from \"./ui/radio-group\";\r\n// import { Label } from \"./ui/label\";\r\n// import { ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\n// const filterData = [\r\n//   {\r\n//     filterType: \"Location\",\r\n//     options: [\r\n//       \"Shikarpur\",\r\n//       \"Sukkur\",\r\n//       \"Hyderabad\",\r\n//       \"Karachi\",\r\n//       \"Islamabad\",\r\n//       \"Rawalpindi\",\r\n//       \"Lahore\",\r\n//       \"Multan\",\r\n//       \"Peshawar\",\r\n//       \"Bahawalpur\",\r\n//       \"Sargodha\",\r\n//     ],\r\n//   },\r\n//   {\r\n//     filterType: \"Job Type\",\r\n//     options: [\"Full Time\", \"Part Time\", \"Contract\", \"Internship\"],\r\n//   },\r\n//   {\r\n//     filterType: \"Experience\",\r\n//     options: [\"0-1 years\", \"1-2 years\", \"2-3 years\", \"4-5 years\", \"5+ years\"],\r\n//   },\r\n//   {\r\n//     filterType: \"Salary\",\r\n//     options: [\"10-20k\", \"20-30k\", \"30-40k\", \"40-50k\", \"50-60k\", \"60-80k\"],\r\n//   },\r\n// ];\r\n\r\n// const Filters = ({ onFilterChange }) => {\r\n//   const [openFilters, setOpenFilters] = useState({});\r\n\r\n//   const toggleFilter = (filterType) => {\r\n//     setOpenFilters((prev) => ({\r\n//       ...prev,\r\n//       [filterType]: !prev[filterType],\r\n//     }));\r\n//   };\r\n\r\n//   return (\r\n//     <section className=\"p-4\">\r\n//       <p className=\"text-xl font-bold mb-3 text-gray-800\">Filters</p>\r\n//       <hr className=\"mb-4\" />\r\n\r\n//       {filterData.map((data, i) => (\r\n//         <div key={i} className=\"mb-4\">\r\n//           <div\r\n//             className=\"flex justify-between items-center cursor-pointer\"\r\n//             onClick={() => toggleFilter(data.filterType)}\r\n//           >\r\n//             <p className=\"font-semibold text-lg\">{data.filterType}</p>\r\n//             {openFilters[data.filterType] ? (\r\n//               <ChevronUp className=\"text-gray-600\" />\r\n//             ) : (\r\n//               <ChevronDown className=\"text-gray-600\" />\r\n//             )}\r\n//           </div>\r\n\r\n//           <div\r\n//             className={`overflow-hidden transition-all duration-300 ease-in-out ${\r\n//               openFilters[data.filterType] ? \"max-h-screen\" : \"max-h-0\"\r\n//             }`}\r\n//           >\r\n//             <div className=\"mt-2 space-y-2\">\r\n//               {data.options.map((item, index) => (\r\n//                 <div\r\n//                   key={`${data.filterType}-${index}`}\r\n//                   className=\"flex items-center space-x-2\"\r\n//                 >\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     id={`${data.filterType}-${index}`}\r\n//                     value={item}\r\n//                     onChange={() =>\r\n//                       onFilterChange(data.filterType.toLowerCase(), item)\r\n//                     }\r\n//                   />\r\n//                   <Label htmlFor={`${data.filterType}-${index}`}>{item}</Label>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Filters;\r\n\r\nimport React from \"react\";\r\n\r\nconst Filters = ({ selectedFilters, setSelectedFilters }) => {\r\n  const handleJobTypeChange = (e) => {\r\n    const value = e.target.value.toLowerCase();\r\n    setSelectedFilters((prev) => ({\r\n      ...prev,\r\n      jobType: prev.jobType.includes(value)\r\n        ? prev.jobType.filter((type) => type !== value)\r\n        : [...prev.jobType, value],\r\n    }));\r\n  };\r\n\r\n  const handleSalaryChange = (e) => {\r\n    setSelectedFilters((prev) => ({ ...prev, salaryRange: e.target.value }));\r\n  };\r\n\r\n  const handleExperienceChange = (e) => {\r\n    setSelectedFilters((prev) => ({\r\n      ...prev,\r\n      experienceRange: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <label>\r\n        Job Type:\r\n        <select multiple onChange={handleJobTypeChange}>\r\n          <option value=\"full time\">Full Time</option>\r\n          <option value=\"part time\">Part Time</option>\r\n          <option value=\"contract\">Contract</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Salary Range:\r\n        <select onChange={handleSalaryChange}>\r\n          <option value=\"\">Any</option>\r\n          <option value=\"40k-60k\">40k-60k</option>\r\n          <option value=\"60k-80k\">60k-80k</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Experience Range:\r\n        <select onChange={handleExperienceChange}>\r\n          <option value=\"\">Any</option>\r\n          <option value=\"0-2\">0-2 years</option>\r\n          <option value=\"3-5\">3-5 years</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,oCAAoC;AACpC,iEAAiE;AACjE,sCAAsC;AACtC,yDAAyD;AAEzD,uBAAuB;AACvB,MAAM;AACN,8BAA8B;AAC9B,iBAAiB;AACjB,qBAAqB;AACrB,kBAAkB;AAClB,qBAAqB;AACrB,mBAAmB;AACnB,qBAAqB;AACrB,sBAAsB;AACtB,kBAAkB;AAClB,kBAAkB;AAClB,oBAAoB;AACpB,sBAAsB;AACtB,oBAAoB;AACpB,SAAS;AACT,OAAO;AACP,MAAM;AACN,8BAA8B;AAC9B,qEAAqE;AACrE,OAAO;AACP,MAAM;AACN,gCAAgC;AAChC,iFAAiF;AACjF,OAAO;AACP,MAAM;AACN,4BAA4B;AAC5B,6EAA6E;AAC7E,OAAO;AACP,KAAK;AAEL,4CAA4C;AAC5C,wDAAwD;AAExD,2CAA2C;AAC3C,kCAAkC;AAClC,iBAAiB;AACjB,yCAAyC;AACzC,WAAW;AACX,OAAO;AAEP,aAAa;AACb,gCAAgC;AAChC,wEAAwE;AACxE,gCAAgC;AAEhC,uCAAuC;AACvC,yCAAyC;AACzC,iBAAiB;AACjB,2EAA2E;AAC3E,4DAA4D;AAC5D,cAAc;AACd,yEAAyE;AACzE,gDAAgD;AAChD,wDAAwD;AACxD,oBAAoB;AACpB,0DAA0D;AAC1D,iBAAiB;AACjB,mBAAmB;AAEnB,iBAAiB;AACjB,qFAAqF;AACrF,0EAA0E;AAC1E,kBAAkB;AAClB,cAAc;AACd,+CAA+C;AAC/C,qDAAqD;AACrD,uBAAuB;AACvB,wDAAwD;AACxD,4DAA4D;AAC5D,oBAAoB;AACpB,2BAA2B;AAC3B,sCAAsC;AACtC,yDAAyD;AACzD,mCAAmC;AACnC,sCAAsC;AACtC,4EAA4E;AAC5E,wBAAwB;AACxB,uBAAuB;AACvB,kFAAkF;AAClF,yBAAyB;AACzB,oBAAoB;AACpB,qBAAqB;AACrB,mBAAmB;AACnB,iBAAiB;AACjB,YAAY;AACZ,iBAAiB;AACjB,OAAO;AACP,KAAK;AAEL,0BAA0B;;;;;AAE1B;;;AAEA,MAAM,UAAU,CAAC,EAAE,eAAe,EAAE,kBAAkB,EAAE;IACtD,MAAM,sBAAsB,CAAC;QAC3B,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW;QACxC,mBAAmB,CAAC,OAAS,CAAC;gBAC5B,GAAG,IAAI;gBACP,SAAS,KAAK,OAAO,CAAC,QAAQ,CAAC,SAC3B,KAAK,OAAO,CAAC,MAAM,CAAC,CAAC,OAAS,SAAS,SACvC;uBAAI,KAAK,OAAO;oBAAE;iBAAM;YAC9B,CAAC;IACH;IAEA,MAAM,qBAAqB,CAAC;QAC1B,mBAAmB,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,aAAa,EAAE,MAAM,CAAC,KAAK;YAAC,CAAC;IACxE;IAEA,MAAM,yBAAyB,CAAC;QAC9B,mBAAmB,CAAC,OAAS,CAAC;gBAC5B,GAAG,IAAI;gBACP,iBAAiB,EAAE,MAAM,CAAC,KAAK;YACjC,CAAC;IACH;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;oBAAM;kCAEL,8OAAC;wBAAO,QAAQ;wBAAC,UAAU;;0CACzB,8OAAC;gCAAO,OAAM;0CAAY;;;;;;0CAC1B,8OAAC;gCAAO,OAAM;0CAAY;;;;;;0CAC1B,8OAAC;gCAAO,OAAM;0CAAW;;;;;;;;;;;;;;;;;;0BAG7B,8OAAC;;oBAAM;kCAEL,8OAAC;wBAAO,UAAU;;0CAChB,8OAAC;gCAAO,OAAM;0CAAG;;;;;;0CACjB,8OAAC;gCAAO,OAAM;0CAAU;;;;;;0CACxB,8OAAC;gCAAO,OAAM;0CAAU;;;;;;;;;;;;;;;;;;0BAG5B,8OAAC;;oBAAM;kCAEL,8OAAC;wBAAO,UAAU;;0CAChB,8OAAC;gCAAO,OAAM;0CAAG;;;;;;0CACjB,8OAAC;gCAAO,OAAM;0CAAM;;;;;;0CACpB,8OAAC;gCAAO,OAAM;0CAAM;;;;;;;;;;;;;;;;;;;;;;;;AAK9B;uCAEe"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Job.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Job.jsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Job.jsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Job.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Job.jsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Job.jsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,gCACA"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/Jobs.jsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { ListFilter, X } from \"lucide-react\";\r\n// import Filters from \"./Filters\";\r\n// import Job from \"./Job\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import useGetAllJobs from \"@/hooks/useGetAllJobs\";\r\n\r\n// const Jobs = () => {\r\n//   const [showFilters, setShowFilters] = useState(false);\r\n//   const [selectedFilters, setSelectedFilters] = useState({\r\n//     location: [],\r\n//     jobType: [],\r\n//     experience: [],\r\n//     salary: [],\r\n//   });\r\n//   const { allJobs } = useSelector((state) => state.job);\r\n//   console.log(\"Áll JOBS\", allJobs);\r\n//   const { fetchAllJobs } = useGetAllJobs();\r\n\r\n//   useEffect(() => {\r\n//     fetchAllJobs();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       if (window.innerWidth >= 1024) {\r\n//         setShowFilters(true);\r\n//       } else {\r\n//         setShowFilters(false);\r\n//       }\r\n//     };\r\n\r\n//     handleResize();\r\n//     window.addEventListener(\"resize\", handleResize);\r\n\r\n//     return () => {\r\n//       window.removeEventListener(\"resize\", handleResize);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleFilterChange = (filterType, value) => {\r\n//     setSelectedFilters((prevFilters) => {\r\n//       const updatedFilters = { ...prevFilters };\r\n//       if (updatedFilters[filterType].includes(value)) {\r\n//         updatedFilters[filterType] = updatedFilters[filterType].filter(\r\n//           (item) => item !== value\r\n//         );\r\n//       } else {\r\n//         updatedFilters[filterType] = [...updatedFilters[filterType], value];\r\n//       }\r\n//       return updatedFilters;\r\n//     });\r\n//   };\r\n\r\n//   const filteredJobs = allJobs.filter((job) => {\r\n//     const hasLocation = job.location !== undefined && job.location !== null;\r\n//     const hasJobType = job.jobType !== undefined && job.jobType !== null;\r\n//     const hasExperience =\r\n//       job.experienceLevel !== undefined && job.experienceLevel !== null;\r\n//     const hasSalary = job.salary !== undefined && job.salary !== null;\r\n\r\n//     const matchesLocation =\r\n//       selectedFilters.location.length === 0 ||\r\n//       (hasLocation && selectedFilters.location.includes(job.location));\r\n\r\n//     const jobType = job.jobType || \"\"; // Fallback to an empty string if job.jobType is undefined\r\n//     const matchesJobType =\r\n//       selectedFilters.jobType.length === 0 ||\r\n//       (hasJobType && selectedFilters.jobType.includes(jobType));\r\n\r\n//     const matchesExperience =\r\n//       selectedFilters.experience.length === 0 ||\r\n//       (hasExperience &&\r\n//         selectedFilters.experience.some((exp) => {\r\n//           const [min, max] = exp.split(\"-\").map(Number);\r\n//           return job.experienceLevel >= min && job.experienceLevel <= max;\r\n//         }));\r\n\r\n//     const matchesSalary =\r\n//       selectedFilters.salary.length === 0 ||\r\n//       (hasSalary &&\r\n//         selectedFilters.salary.some((sal) => {\r\n//           const [min, max] = sal\r\n//             .split(\"-\")\r\n//             .map((val) => parseInt(val.replace(\"k\", \"000\"), 10));\r\n//           return job.salary >= min && job.salary <= max;\r\n//         }));\r\n\r\n//     return (\r\n//       matchesLocation && matchesJobType && matchesExperience && matchesSalary\r\n//     );\r\n//   });\r\n\r\n//   // const filteredJobs = allJobs.filter((job) => {\r\n//   //   const hasLocation = job.location !== undefined && job.location !== null;\r\n//   //   const hasJobType = job.jobType !== undefined && job.jobType !== null;\r\n//   //   const hasExperience =\r\n//   //     job.experienceLevel !== undefined && job.experienceLevel !== null;\r\n//   //   const hasSalary = job.salary !== undefined && job.salary !== null;\r\n\r\n//   //   const matchesLocation =\r\n//   //     selectedFilters.location.length === 0 ||\r\n//   //     (hasLocation && selectedFilters.location.includes(job.location));\r\n\r\n//   //   const matchesJobType =\r\n//   //     selectedFilters.jobType.length === 0 ||\r\n//   //     (hasJobType && selectedFilters.jobType.includes(job.jobType));\r\n\r\n//   //   const matchesExperience =\r\n//   //     selectedFilters.experience.length === 0 ||\r\n//   //     (hasExperience &&\r\n//   //       selectedFilters.experience.some((exp) => {\r\n//   //         const [min, max] = exp.split(\"-\").map(Number);\r\n//   //         return job.experienceLevel >= min && job.experienceLevel <= max;\r\n//   //       }));\r\n\r\n//   //   const matchesSalary =\r\n//   //     selectedFilters.salary.length === 0 ||\r\n//   //     (hasSalary &&\r\n//   //       selectedFilters.salary.some((sal) => {\r\n//   //         const [min, max] = sal\r\n//   //           .split(\"-\")\r\n//   //           .map((val) => parseInt(val.replace(\"k\", \"000\"), 10));\r\n//   //         return job.salary >= min && job.salary <= max;\r\n//   //       }));\r\n\r\n//   //   return (\r\n//   //     matchesLocation && matchesJobType && matchesExperience && matchesSalary\r\n//   //   );\r\n//   // });\r\n\r\n//   return (\r\n//     <section className=\"min-h-screen wrapper px-4 xl:px-0 py-8\">\r\n//       <div className=\"flex items-center justify-between\">\r\n//         <p className=\"text-3xl font-bold mb-5 text-gray-800\">Job Listings</p>\r\n//         <span\r\n//           onClick={() => setShowFilters((prev) => !prev)}\r\n//           className=\"cursor-pointer lg:hidden\"\r\n//         >\r\n//           {showFilters ? <X size={28} /> : <ListFilter size={28} />}\r\n//         </span>\r\n//       </div>\r\n//       <div className=\"flex flex-col lg:flex-row gap-4\">\r\n//         <div\r\n//           className={`transform transition-all duration-300 ease-in-out ${\r\n//             showFilters\r\n//               ? \"opacity-100 translate-x-0 block\"\r\n//               : \"opacity-0 -translate-x-full hidden lg:block\"\r\n//           } w-full lg:w-1/4 bg-white lg:p-4 rounded-lg border`}\r\n//         >\r\n//           <Filters onFilterChange={handleFilterChange} />\r\n//         </div>\r\n\r\n//         <div className=\"flex-1\">\r\n//           {filteredJobs.length === 0 ? (\r\n//             <div className=\"text-center py-10\">\r\n//               <span className=\"text-xl text-gray-600\">No jobs found</span>\r\n//             </div>\r\n//           ) : (\r\n//             <div\r\n//               className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4 overflow-auto scrollable-content\"\r\n//               style={{ maxHeight: \"calc(100vh - 200px)\" }}\r\n//             >\r\n//               {filteredJobs?.map((job) => (\r\n//                 <Job key={job._id} job={job} />\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Jobs;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport Job from \"./Job\";\r\n\r\nconst Jobs = ({ allJobs }) => {\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    jobType: [],\r\n    salaryRange: \"\",\r\n    experienceRange: \"\",\r\n  });\r\n  const [filteredJobs, setFilteredJobs] = useState(allJobs);\r\n\r\n  useEffect(() => {\r\n    filterJobs();\r\n  }, [selectedFilters, allJobs]);\r\n\r\n  const filterJobs = () => {\r\n    let filtered = allJobs.filter((job) => {\r\n      const jobTypeMatch =\r\n        selectedFilters.jobType.length === 0 ||\r\n        selectedFilters.jobType.includes(job.jobType.toLowerCase());\r\n\r\n      const salaryMatch = selectedFilters.salaryRange\r\n        ? (() => {\r\n            const [min, max] = selectedFilters.salaryRange\r\n              .split(\"-\")\r\n              .map((val) => parseInt(val.replace(\"k\", \"000\"), 10));\r\n            const jobSalary = parseInt(job.salary.replace(\"k\", \"000\"), 10);\r\n            return jobSalary >= min && jobSalary <= max;\r\n          })()\r\n        : true;\r\n\r\n      const experienceMatch = selectedFilters.experienceRange\r\n        ? (() => {\r\n            const [min, max] = selectedFilters.experienceRange\r\n              .split(\"-\")\r\n              .map(Number);\r\n            return job.experienceLevel >= min && job.experienceLevel <= max;\r\n          })()\r\n        : true;\r\n\r\n      return jobTypeMatch && salaryMatch && experienceMatch;\r\n    });\r\n    setFilteredJobs(filtered);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Filters\r\n        selectedFilters={selectedFilters}\r\n        setSelectedFilters={setSelectedFilters}\r\n      />\r\n      <div className=\"job-list\">\r\n        {filteredJobs.length > 0 ? (\r\n          filteredJobs.map((job) => <Job key={job.id} job={job} />)\r\n        ) : (\r\n          <p>No jobs found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/jobs/page.jsx"],"sourcesContent":["import Jobs from \"@/components/Jobs\";\r\n\r\nconst JobsPage = () => {\r\n  return (\r\n    <>\r\n      <Jobs />\r\n    </>\r\n  );\r\n};\r\nexport default JobsPage;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,WAAW;IACf,qBACE;kBACE,cAAA,8OAAC,mHAAA,CAAA,UAAI;;;;;;AAGX;uCACe"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}