{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/lib/daysAgoFunction.js"],"sourcesContent":["const daysAgoFunction = (dbTime) => {\r\n  if (!dbTime) return NaN;\r\n  const createdAt = new Date(dbTime);\r\n  const currentTime = new Date();\r\n  const diffTime = currentTime - createdAt;\r\n  return Math.floor(diffTime / (1000 * 60 * 60 * 24)); // Fixed time calculation\r\n};\r\n\r\nexport default daysAgoFunction;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI,CAAC,QAAQ,OAAO;IACpB,MAAM,YAAY,IAAI,KAAK;IAC3B,MAAM,cAAc,IAAI;IACxB,MAAM,WAAW,cAAc;IAC/B,OAAO,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE,IAAI,yBAAyB;AAChF;uCAEe"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/JobCard.jsx"],"sourcesContent":["import { Avatar, AvatarImage } from \"./ui/avatar\";\r\nimport { Badge } from \"./ui/badge\";\r\nimport daysAgoFunction from \"@/lib/daysAgoFunction\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst JobCard = ({ job }) => {\r\n  const router = useRouter();\r\n\r\n  const truncateDescription = (description, maxLength) => {\r\n    if (!description) return \"\";\r\n    if (description.length <= maxLength) {\r\n      return description;\r\n    }\r\n    return description.substring(0, maxLength) + \"...\";\r\n  };\r\n\r\n  const formatSalary = (salary) => {\r\n    return salary?.toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <section\r\n      onClick={() => router.push(`/jobs/${job._id}`)}\r\n      className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n    >\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n          {daysAgoFunction(job?.createdAt) === 0\r\n            ? \"Today\"\r\n            : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n        </span>\r\n      </div>\r\n      <div className=\"flex items-center mb-4\">\r\n        {job.company?.logo ? (\r\n          <Avatar>\r\n            <AvatarImage\r\n              src={job?.company?.logo}\r\n              alt={job?.company?.name || \"Company Logo\"}\r\n              className=\"object-contain\"\r\n            />\r\n          </Avatar>\r\n        ) : (\r\n          <Avatar>\r\n            <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n        <div className=\"ml-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {job?.company?.name || \"Unknown Company\"}\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n            {job?.location}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n        {job?.title}\r\n      </h2>\r\n      <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n        {truncateDescription(job?.description, 100)}\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n          {job?.position} Positions\r\n        </Badge>\r\n        <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n          {job?.jobType}\r\n        </Badge>\r\n        <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n          {formatSalary(job?.salary)} PKR\r\n        </Badge>\r\n        <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n          {job?.experienceLevel} Experience\r\n        </Badge>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,UAAU,CAAC,EAAE,GAAG,EAAE;IACtB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,sBAAsB,CAAC,aAAa;QACxC,IAAI,CAAC,aAAa,OAAO;QACzB,IAAI,YAAY,MAAM,IAAI,WAAW;YACnC,OAAO;QACT;QACA,OAAO,YAAY,SAAS,CAAC,GAAG,aAAa;IAC/C;IAEA,MAAM,eAAe,CAAC;QACpB,OAAO,QAAQ;IACjB;IAEA,qBACE,8OAAC;QACC,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,GAAG,EAAE;QAC7C,WAAU;;0BAEV,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BACb,CAAA,GAAA,sHAAA,CAAA,UAAe,AAAD,EAAE,KAAK,eAAe,IACjC,UACA,GAAG,CAAA,GAAA,sHAAA,CAAA,UAAe,AAAD,EAAE,KAAK,WAAW,SAAS,CAAC;;;;;;;;;;;0BAGrD,8OAAC;gBAAI,WAAU;;oBACZ,IAAI,OAAO,EAAE,qBACZ,8OAAC,2HAAA,CAAA,SAAM;kCACL,cAAA,8OAAC,2HAAA,CAAA,cAAW;4BACV,KAAK,KAAK,SAAS;4BACnB,KAAK,KAAK,SAAS,QAAQ;4BAC3B,WAAU;;;;;;;;;;6CAId,8OAAC,2HAAA,CAAA,SAAM;kCACL,cAAA,8OAAC;4BAAK,WAAU;sCACb,KAAK,SAAS,OAAO,KAAK,SAAS,KAAK,OAAO,KAAK;;;;;;;;;;;kCAI3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CACX,KAAK,SAAS,QAAQ;;;;;;0CAEzB,8OAAC;gCAAE,WAAU;0CACV,KAAK;;;;;;;;;;;;;;;;;;0BAIZ,8OAAC;gBAAG,WAAU;0BACX,KAAK;;;;;;0BAER,8OAAC;gBAAE,WAAU;0BACV,oBAAoB,KAAK,aAAa;;;;;;0BAEzC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0HAAA,CAAA,QAAK;wBAAC,WAAU;;4BACd,KAAK;4BAAS;;;;;;;kCAEjB,8OAAC,0HAAA,CAAA,QAAK;wBAAC,WAAU;kCACd,KAAK;;;;;;kCAER,8OAAC,0HAAA,CAAA,QAAK;wBAAC,WAAU;;4BACd,aAAa,KAAK;4BAAQ;;;;;;;kCAE7B,8OAAC,0HAAA,CAAA,QAAK;wBAAC,WAAU;;4BACd,KAAK;4BAAgB;;;;;;;;;;;;;;;;;;;AAKhC;uCAEe"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/hooks/useGetAllJobs.jsx"],"sourcesContent":["// \"use client\";\r\n\r\nimport { JOB_API_ENDPOINT } from \"@/lib/constant\";\r\nimport { setAllJobs } from \"@/redux/slices/jobSlice\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useGetAllJobs = (applySearch = false) => {\r\n  const { searchJobByText } = useSelector((state) => state.job);\r\n  const dispatch = useDispatch();\r\n\r\n  const fetchAllJobs = async () => {\r\n    try {\r\n      const keyword = applySearch ? encodeURIComponent(searchJobByText) : \"\";\r\n      const res = await axios.get(\r\n        `${JOB_API_ENDPOINT}/get?keyword=${keyword}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        dispatch(setAllJobs(res.data.jobs));\r\n      } else {\r\n        dispatch(setAllJobs([]));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching jobs:\", error);\r\n      dispatch(setAllJobs([]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllJobs();\r\n  }, [applySearch, searchJobByText, dispatch]);\r\n\r\n  return { fetchAllJobs };\r\n};\r\n\r\nexport default useGetAllJobs;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAEhB;AACA;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,gBAAgB,CAAC,cAAc,KAAK;IACxC,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,GAAG;IAC5D,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,UAAU,cAAc,mBAAmB,mBAAmB;YACpE,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CACzB,GAAG,+GAAA,CAAA,mBAAgB,CAAC,aAAa,EAAE,SAAS,EAC5C;gBACE,iBAAiB;YACnB;YAEF,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACpB,SAAS,CAAA,GAAA,2HAAA,CAAA,aAAU,AAAD,EAAE,IAAI,IAAI,CAAC,IAAI;YACnC,OAAO;gBACL,SAAS,CAAA,GAAA,2HAAA,CAAA,aAAU,AAAD,EAAE,EAAE;YACxB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,SAAS,CAAA,GAAA,2HAAA,CAAA,aAAU,AAAD,EAAE,EAAE;QACxB;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;QAAa;QAAiB;KAAS;IAE3C,OAAO;QAAE;IAAa;AACxB;uCAEe"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/browse/page.jsx"],"sourcesContent":["\"use client\";\r\nimport JobCard from \"@/components/JobCard\";\r\nimport useGetAllJobs from \"@/hooks/useGetAllJobs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"next/navigation\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSearchJobByText } from \"@/redux/slices/jobSlice\";\r\n\r\nconst BrowseJobs = () => {\r\n  const searchParams = useSearchParams();\r\n  const searchQuery = searchParams.get(\"query\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      dispatch(setSearchJobByText(searchQuery));\r\n    }\r\n  }, [searchQuery, dispatch]);\r\n\r\n  useGetAllJobs(true); // Fetch jobs with the search query\r\n  const { allJobs } = useSelector((state) => state.job);\r\n\r\n  return (\r\n    <section className=\"wrapper my-10 px-4 sm:px-6 xl:px-0\">\r\n      <h2 className=\"font-bold text-2xl md:text-3xl my-10 text-center md:text-left text-gray-900 dark:text-gray-100\">\r\n        Search Results ({allJobs.length})\r\n      </h2>\r\n      {allJobs.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {allJobs?.map((job) => (\r\n            <JobCard key={job?._id} job={job} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center text-gray-600 dark:text-gray-400\">\r\n          No jobs found.\r\n        </p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BrowseJobs;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AAEA;AADA;AANA;;;;;;;;;AASA,MAAM,aAAa;IACjB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,cAAc,aAAa,GAAG,CAAC;IACrC,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa;YACf,SAAS,CAAA,GAAA,2HAAA,CAAA,qBAAkB,AAAD,EAAE;QAC9B;IACF,GAAG;QAAC;QAAa;KAAS;IAE1B,CAAA,GAAA,uHAAA,CAAA,UAAa,AAAD,EAAE,OAAO,mCAAmC;IACxD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,GAAG;IAEpD,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;oBAAiG;oBAC5F,QAAQ,MAAM;oBAAC;;;;;;;YAEjC,QAAQ,MAAM,GAAG,kBAChB,8OAAC;gBAAI,WAAU;0BACZ,SAAS,IAAI,CAAC,oBACb,8OAAC,sHAAA,CAAA,UAAO;wBAAgB,KAAK;uBAAf,KAAK;;;;;;;;;qCAIvB,8OAAC;gBAAE,WAAU;0BAA+C;;;;;;;;;;;;AAMpE;uCAEe"}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}