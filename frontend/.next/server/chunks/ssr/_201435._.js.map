{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/lib/daysAgoFunction.js"],"sourcesContent":["const daysAgoFunction = (dbTime) => {\r\n  if (!dbTime) return NaN;\r\n  const createdAt = new Date(dbTime);\r\n  const currentTime = new Date();\r\n  const diffTime = currentTime - createdAt;\r\n  return Math.floor(diffTime / (1000 * 60 * 60 * 24)); // Fixed time calculation\r\n};\r\n\r\nexport default daysAgoFunction;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI,CAAC,QAAQ,OAAO;IACpB,MAAM,YAAY,IAAI,KAAK;IAC3B,MAAM,cAAc,IAAI;IACxB,MAAM,WAAW,cAAc;IAC/B,OAAO,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE,IAAI,yBAAyB;AAChF;uCAEe"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/JobCard.jsx"],"sourcesContent":["import { Bookmark, BookmarkMinus } from \"lucide-react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\r\nimport { Badge } from \"./ui/badge\";\r\nimport daysAgoFunction from \"@/lib/daysAgoFunction\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst JobCard = ({ job }) => {\r\n  const router = useRouter();\r\n  const truncateDescription = (description, maxLength) => {\r\n    if (!description) return \"\";\r\n    if (description.length <= maxLength) {\r\n      return description;\r\n    }\r\n    return description.substring(0, maxLength) + \"...\";\r\n  };\r\n\r\n  const isSaved = false;\r\n\r\n  return (\r\n    <section\r\n      onClick={() => router.push(`/jobs/${job._id}`)}\r\n      className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n    >\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n          {daysAgoFunction(job?.createdAt) === 0\r\n            ? \"Today\"\r\n            : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n        </span>\r\n        <Button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n          variant=\"outline\"\r\n          className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n        >\r\n          {isSaved ? (\r\n            <>\r\n              <BookmarkMinus /> Remove\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Bookmark /> Save\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex items-center mb-4\">\r\n        {job.company?.logo ? (\r\n          <Avatar>\r\n            <AvatarImage\r\n              src={job?.company?.logo}\r\n              alt={job?.company?.name}\r\n              className=\"object-contain\"\r\n            />\r\n          </Avatar>\r\n        ) : (\r\n          <Avatar>\r\n            <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n              {/* {job?.company?.name.charAt(0)} */}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n        <div className=\"ml-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {job?.company?.name}\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n            {job?.location}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n        {job?.title}\r\n      </h2>\r\n      <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n        {truncateDescription(job?.description, 100)}\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n          {job?.position} Positions\r\n        </Badge>\r\n        <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n          {job?.jobType}\r\n        </Badge>\r\n        <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n          {job?.salary} PKR\r\n        </Badge>\r\n        <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n          {job?.experienceLevel} Experience\r\n        </Badge>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n\r\n// \"use client\";\r\n// import { Bookmark, BookmarkMinus } from \"lucide-react\";\r\n// import { Button } from \"./ui/button\";\r\n// import { Avatar, AvatarImage } from \"./ui/avatar\";\r\n// import { Badge } from \"./ui/badge\";\r\n// import daysAgoFunction from \"@/lib/daysAgoFunction\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { toast } from \"sonner\";\r\n// import { addSavedJob, removeSavedJob } from \"@/redux/slices/jobSlice\";\r\n// import axios from \"axios\";\r\n// import { USER_API_ENDPOINT } from \"@/lib/constant\";\r\n\r\n// const JobCard = ({ job }) => {\r\n//   const router = useRouter();\r\n//   const dispatch = useDispatch();\r\n//   const savedJobs = useSelector((state) => state.job.savedJobs);\r\n//   const isSaved = savedJobs.some((savedJob) => savedJob._id === job._id);\r\n\r\n//   console.log(\"Job data in JobCard:\", job);\r\n\r\n//   const truncateDescription = (description, maxLength) => {\r\n//     if (!description) return \"\";\r\n//     if (description.length <= maxLength) {\r\n//       return description;\r\n//     }\r\n//     return description.substring(0, maxLength) + \"...\";\r\n//   };\r\n\r\n//   const handleSaveJob = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const config = {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//         withCredentials: true,\r\n//       };\r\n\r\n//       if (isSaved) {\r\n//         await axios.post(\r\n//           `${USER_API_ENDPOINT}/delete-saved-job/${job._id}`,\r\n//           {},\r\n//           config\r\n//         );\r\n//         dispatch(removeSavedJob(job._id));\r\n//         toast.success(\"Job removed from saved jobs\");\r\n//       } else {\r\n//         const response = await axios.post(\r\n//           `${USER_API_ENDPOINT}/save-job`,\r\n//           { jobId: job._id },\r\n//           config\r\n//         );\r\n//         dispatch(addSavedJob(response.data.savedJob));\r\n//         toast.success(\"Job saved successfully\");\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(error.response?.data?.message || \"An error occurred\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <section\r\n//       onClick={() => router.push(`/jobs/${job._id}`)}\r\n//       className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n//     >\r\n//       <div className=\"flex justify-between items-center mb-4\">\r\n//         <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n//           {daysAgoFunction(job?.createdAt) === 0\r\n//             ? \"Today\"\r\n//             : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n//         </span>\r\n//         <Button\r\n//           onClick={(e) => {\r\n//             e.stopPropagation();\r\n//             handleSaveJob();\r\n//           }}\r\n//           variant=\"outline\"\r\n//           className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n//         >\r\n//           {isSaved ? (\r\n//             <>\r\n//               <BookmarkMinus /> Remove\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Bookmark /> Save\r\n//             </>\r\n//           )}\r\n//         </Button>\r\n//       </div>\r\n//       <div className=\"flex items-center mb-4\">\r\n//         {job.company?.logo ? (\r\n//           <Avatar>\r\n//             <AvatarImage\r\n//               src={job?.company?.logo}\r\n//               alt={job?.company?.name || \"Company Logo\"}\r\n//               className=\"object-contain\"\r\n//             />\r\n//           </Avatar>\r\n//         ) : (\r\n//           <Avatar>\r\n//             <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n//               {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n//             </span>\r\n//           </Avatar>\r\n//         )}\r\n//         <div className=\"ml-4\">\r\n//           <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n//             {job?.company?.name || \"Unknown Company\"}\r\n//           </h3>\r\n//           <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n//             {job?.location}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//       <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n//         {job?.title}\r\n//       </h2>\r\n//       <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n//         {truncateDescription(job?.description, 100)}\r\n//       </p>\r\n//       <div className=\"flex flex-wrap gap-2\">\r\n//         <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n//           {job?.position} Positions\r\n//         </Badge>\r\n//         <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n//           {job?.jobType}\r\n//         </Badge>\r\n//         <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n//           {job?.salary} PKR\r\n//         </Badge>\r\n//         <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n//           {job?.experienceLevel} Experience\r\n//         </Badge>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default JobCard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/saved-jobs/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { useSelector } from \"react-redux\";\r\nimport JobCard from \"@/components/JobCard\";\r\n\r\nconst SavedJobs = () => {\r\n  const savedJobs = useSelector((state) => state.job.savedJobs);\r\n\r\n  return (\r\n    <section className=\"wrapper py-8 px-4 sm:px-6 2xl:px-0\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center md:text-left\">\r\n        Saved <span className=\"text-purple-600\">Jobs</span>\r\n      </h1>\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n        {savedJobs?.map((job) => (\r\n          <JobCard key={job._id} job={job} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SavedJobs;\r\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIA,MAAM,YAAY;IAChB,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,GAAG,CAAC,SAAS;IAE5D,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;oBAAmD;kCACzD,8OAAC;wBAAK,WAAU;kCAAkB;;;;;;;;;;;;0BAE1C,8OAAC;gBAAI,WAAU;0BACZ,WAAW,IAAI,CAAC,oBACf,8OAAC,sHAAA,CAAA,UAAO;wBAAe,KAAK;uBAAd,IAAI,GAAG;;;;;;;;;;;;;;;;AAK/B;uCAEe"}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}