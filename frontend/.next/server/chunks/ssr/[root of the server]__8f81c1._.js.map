{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAM;IAC1B,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/button.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n  return (\r\n    (<Comp\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      ref={ref}\r\n      {...props} />)\r\n  );\r\n})\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,MAAM,uBAAS,sMAAM,UAAU,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxF,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACG,8OAAC;QACA,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAEf;AACA,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/avatar.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.jsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sCACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/ui/badge.jsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  ...props\r\n}) {\r\n  return (<div className={cn(badgeVariants({ variant }), className)} {...props} />);\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OACJ;IACC,qBAAQ,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAC9E"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/lib/daysAgoFunction.js"],"sourcesContent":["const daysAgoFunction = (dbTime) => {\r\n  if (!dbTime) return NaN;\r\n  const createdAt = new Date(dbTime);\r\n  const currentTime = new Date();\r\n  const diffTime = currentTime - createdAt;\r\n  return Math.floor(diffTime / (1000 * 60 * 60 * 24)); // Fixed time calculation\r\n};\r\n\r\nexport default daysAgoFunction;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,kBAAkB,CAAC;IACvB,IAAI,CAAC,QAAQ,OAAO;IACpB,MAAM,YAAY,IAAI,KAAK;IAC3B,MAAM,cAAc,IAAI;IACxB,MAAM,WAAW,cAAc;IAC/B,OAAO,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE,IAAI,yBAAyB;AAChF;uCAEe"}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/redux/slices/jobSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const jobSlice = createSlice({\r\n//   name: \"job\",\r\n//   initialState: {\r\n//     allJobs: [],\r\n//     savedJobs: [],\r\n//     allRecruiterJobs: [],\r\n//     singleJob: null,\r\n//     searchJobByText: \"\",\r\n//     allAppliedJobs: [],\r\n//     searchedQuery: \"\",\r\n//   },\r\n//   reducers: {\r\n//     setAllJobs: (state, action) => {\r\n//       state.allJobs = action.payload || [];\r\n//     },\r\n//     setSavedJobs: (state, action) => {\r\n//       state.savedJobs = action.payload || [];\r\n//     },\r\n//     clearSavedJobs: (state) => {\r\n//       state.savedJobs = [];\r\n//     },\r\n//     setAllRecruiterJobs: (state, action) => {\r\n//       state.allRecruiterJobs = action.payload;\r\n//     },\r\n//     setSingleJob: (state, action) => {\r\n//       state.singleJob = action.payload;\r\n//     },\r\n//     setSearchJobByText: (state, action) => {\r\n//       state.searchJobByText = action.payload;\r\n//     },\r\n//     setAllAppliedJobs: (state, action) => {\r\n//       state.allAppliedJobs = action.payload;\r\n//     },\r\n//     clearAllAppliedJobs: (state) => {\r\n//       state.allAppliedJobs = [];\r\n//     },\r\n//     setSearchedQuery: (state, action) => {\r\n//       state.searchedQuery = action.payload;\r\n//     },\r\n//     setDeleteJob: (state, action) => {\r\n//       const jobId = action.payload;\r\n//       state.allJobs = state.allJobs.filter((job) => job._id !== jobId);\r\n//       state.allRecruiterJobs = state.allRecruiterJobs.filter(\r\n//         (job) => job._id !== jobId\r\n//       );\r\n//     },\r\n//   },\r\n// });\r\n\r\n// export const {\r\n//   setAllJobs,\r\n//   setSavedJobs,\r\n//   clearSavedJobs,\r\n//   setSingleJob,\r\n//   setAllRecruiterJobs,\r\n//   setSearchJobByText,\r\n//   setAllAppliedJobs,\r\n//   clearAllAppliedJobs,\r\n//   setSearchedQuery,\r\n//   setDeleteJob,\r\n// } = jobSlice.actions;\r\n\r\n// export default jobSlice.reducer;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst jobSlice = createSlice({\r\n  name: \"job\",\r\n  initialState: {\r\n    allJobs: [],\r\n    allRecruiterJobs: [],\r\n    singleJob: null,\r\n    searchJobByText: \"\",\r\n    allAppliedJobs: [],\r\n    searchedQuery: \"\",\r\n    savedJobs: [], // Ensure this is defined\r\n  },\r\n  reducers: {\r\n    setAllJobs: (state, action) => {\r\n      state.allJobs = action.payload || [];\r\n    },\r\n    setAllRecruiterJobs: (state, action) => {\r\n      state.allRecruiterJobs = action.payload;\r\n    },\r\n    setSingleJob: (state, action) => {\r\n      state.singleJob = action.payload;\r\n    },\r\n    setSearchJobByText: (state, action) => {\r\n      state.searchJobByText = action.payload;\r\n    },\r\n    setAllAppliedJobs: (state, action) => {\r\n      state.allAppliedJobs = action.payload;\r\n    },\r\n    clearAllAppliedJobs: (state) => {\r\n      state.allAppliedJobs = [];\r\n    },\r\n    setSearchedQuery: (state, action) => {\r\n      state.searchedQuery = action.payload;\r\n    },\r\n    setDeleteJob: (state, action) => {\r\n      const jobId = action.payload;\r\n      state.allJobs = state.allJobs.filter((job) => job._id !== jobId);\r\n      state.allRecruiterJobs = state.allRecruiterJobs.filter(\r\n        (job) => job._id !== jobId\r\n      );\r\n    },\r\n    setSavedJobs: (state, action) => {\r\n      state.savedJobs = action.payload;\r\n    },\r\n\r\n    addSavedJob: (state, action) => {\r\n      const job = action.payload;\r\n      const existingJob = state.savedJobs.find((j) => j._id === job._id);\r\n\r\n      if (!existingJob) {\r\n        state.savedJobs.push(job); // Ensure full job data is stored\r\n      }\r\n    },\r\n\r\n    // addSavedJob: (state, action) => {\r\n    //   state.savedJobs.push(action.payload);\r\n    // },\r\n    removeSavedJob: (state, action) => {\r\n      state.savedJobs = state.savedJobs.filter(\r\n        (job) => job._id !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setAllJobs,\r\n  setSingleJob,\r\n  setAllRecruiterJobs,\r\n  setSearchJobByText,\r\n  setAllAppliedJobs,\r\n  clearAllAppliedJobs,\r\n  setSearchedQuery,\r\n  setDeleteJob,\r\n  setSavedJobs,\r\n  addSavedJob,\r\n  removeSavedJob,\r\n} = jobSlice.actions;\r\n\r\nexport default jobSlice.reducer;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/lib/constant.js"],"sourcesContent":["export const USER_API_ENDPOINT = \"http://localhost:8080/api/user\";\r\nexport const JOB_API_ENDPOINT = \"http://localhost:8080/api/job\";\r\nexport const COMPANY_API_ENDPOINT = \"http://localhost:8080/api/company\";\r\nexport const APPLICATION_API_ENDPOINT = \"http://localhost:8080/api/application\";\r\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AACzB,MAAM,uBAAuB;AAC7B,MAAM,2BAA2B"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/JobCard.jsx"],"sourcesContent":["import { Bookmark, BookmarkMinus } from \"lucide-react\";\r\nimport { Button } from \"./ui/button\";\r\nimport { Avatar, AvatarImage } from \"./ui/avatar\";\r\nimport { Badge } from \"./ui/badge\";\r\nimport daysAgoFunction from \"@/lib/daysAgoFunction\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"sonner\";\r\nimport { addSavedJob, removeSavedJob } from \"@/redux/slices/jobSlice\";\r\nimport axios from \"axios\";\r\nimport { USER_API_ENDPOINT } from \"@/lib/constant\";\r\n\r\nconst JobCard = ({ job }) => {\r\n  console.log(\"Rendering job:\", job);\r\n\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const savedJobs = useSelector((state) => state.job.savedJobs);\r\n  const isSaved = savedJobs.some((savedJob) => savedJob._id === job._id);\r\n\r\n  const truncateDescription = (description, maxLength) => {\r\n    if (!description) return \"\";\r\n    if (description.length <= maxLength) {\r\n      return description;\r\n    }\r\n    return description.substring(0, maxLength) + \"...\";\r\n  };\r\n\r\n  const handleSaveJob = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        withCredentials: true,\r\n      };\r\n\r\n      if (isSaved) {\r\n        await axios.post(\r\n          `${USER_API_ENDPOINT}/delete-saved-job/${job._id}`,\r\n          {},\r\n          config\r\n        );\r\n        dispatch(removeSavedJob(job._id));\r\n        toast.success(\"Job removed from saved jobs\");\r\n      } else {\r\n        const response = await axios.post(\r\n          `${USER_API_ENDPOINT}/save-job`,\r\n          { jobId: job._id },\r\n          config\r\n        );\r\n        dispatch(addSavedJob(response.data.savedJob));\r\n        toast.success(\"Job saved successfully\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"An error occurred\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      onClick={() => router.push(`/jobs/${job._id}`)}\r\n      className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n    >\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n          {daysAgoFunction(job?.createdAt) === 0\r\n            ? \"Today\"\r\n            : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n        </span>\r\n        <Button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleSaveJob();\r\n          }}\r\n          variant=\"outline\"\r\n          className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n        >\r\n          {isSaved ? (\r\n            <>\r\n              <BookmarkMinus /> Remove\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Bookmark /> Save\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex items-center mb-4\">\r\n        {job.company?.logo ? (\r\n          <Avatar>\r\n            <AvatarImage\r\n              src={job?.company?.logo}\r\n              alt={job?.company?.name || \"Company Logo\"}\r\n              className=\"object-contain\"\r\n            />\r\n          </Avatar>\r\n        ) : (\r\n          <Avatar>\r\n            <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n        <div className=\"ml-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {job?.company?.name || \"Unknown Company\"}\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n            {job?.location}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n        {job?.title}\r\n      </h2>\r\n      <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n        {truncateDescription(job?.description, 100)}\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n          {job?.position} Positions\r\n        </Badge>\r\n        <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n          {job?.jobType}\r\n        </Badge>\r\n        <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n          {job?.salary} PKR\r\n        </Badge>\r\n        <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n          {job?.experienceLevel} Experience\r\n        </Badge>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n\r\n// \"use client\";\r\n// import { Bookmark, BookmarkMinus } from \"lucide-react\";\r\n// import { Button } from \"./ui/button\";\r\n// import { Avatar, AvatarImage } from \"./ui/avatar\";\r\n// import { Badge } from \"./ui/badge\";\r\n// import daysAgoFunction from \"@/lib/daysAgoFunction\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { toast } from \"sonner\";\r\n// import { addSavedJob, removeSavedJob } from \"@/redux/slices/jobSlice\";\r\n// import axios from \"axios\";\r\n// import { COMPANY_API_ENDPOINT, USER_API_ENDPOINT } from \"@/lib/constant\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// const JobCard = ({ job }) => {\r\n//   const router = useRouter();\r\n//   const dispatch = useDispatch();\r\n//   const savedJobs = useSelector((state) => state.job.savedJobs);\r\n//   const isSaved = savedJobs.some((savedJob) => savedJob._id === job._id);\r\n//   // const [companyInfo, setCompanyInfo] = useState(null);\r\n\r\n//   // const fetchCompanyInfo = async () => {\r\n//   //   try {\r\n//   //     const res = await axios.get(\r\n//   //       `${COMPANY_API_ENDPOINT}/get/${job.company}`,\r\n//   //       {\r\n//   //         withCredentials: true,\r\n//   //       }\r\n//   //     );\r\n//   //     if (res.data.success) setCompanyInfo(res.data.company);\r\n//   //   } catch (error) {\r\n//   //     console.log(error);\r\n//   //   }\r\n//   // };\r\n\r\n//   const truncateDescription = (description, maxLength) => {\r\n//     if (!description) return \"\";\r\n//     if (description.length <= maxLength) {\r\n//       return description;\r\n//     }\r\n//     return description.substring(0, maxLength) + \"...\";\r\n//   };\r\n\r\n//   const handleSaveJob = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const config = {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//         withCredentials: true,\r\n//       };\r\n\r\n//       if (isSaved) {\r\n//         await axios.post(\r\n//           `${USER_API_ENDPOINT}/delete-saved-job/${job._id}`,\r\n//           {},\r\n//           config\r\n//         );\r\n//         dispatch(removeSavedJob(job._id));\r\n//         toast.success(\"Job removed from saved jobs\");\r\n//       } else {\r\n//         const response = await axios.post(\r\n//           `${USER_API_ENDPOINT}/save-job`,\r\n//           { jobId: job._id },\r\n//           config\r\n//         );\r\n//         dispatch(addSavedJob(response.data.savedJob));\r\n//         toast.success(\"Job saved successfully\");\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(error.response?.data?.message || \"An error occurred\");\r\n//     }\r\n//   };\r\n\r\n//   // useEffect(() => {\r\n//   //   fetchCompanyInfo();\r\n//   // }, [job.company]);\r\n\r\n//   return (\r\n//     <section\r\n//       onClick={() => router.push(`/jobs/${job._id}`)}\r\n//       className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n//     >\r\n//       <div className=\"flex justify-between items-center mb-4\">\r\n//         <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n//           {daysAgoFunction(job?.createdAt) === 0\r\n//             ? \"Today\"\r\n//             : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n//         </span>\r\n//         <Button\r\n//           onClick={(e) => {\r\n//             e.stopPropagation();\r\n//             handleSaveJob();\r\n//           }}\r\n//           variant=\"outline\"\r\n//           className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n//         >\r\n//           {isSaved ? (\r\n//             <>\r\n//               <BookmarkMinus /> Remove\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Bookmark /> Save\r\n//             </>\r\n//           )}\r\n//         </Button>\r\n//       </div>\r\n//       <div className=\"flex items-center mb-4\">\r\n//         {job.company?.logo ? (\r\n//           <Avatar>\r\n//             <AvatarImage\r\n//               src={job?.company?.logo}\r\n//               alt={job?.company?.name || \"Company Logo\"}\r\n//               className=\"object-contain\"\r\n//             />\r\n//           </Avatar>\r\n//         ) : (\r\n//           <Avatar>\r\n//             <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n//               {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n//             </span>\r\n//           </Avatar>\r\n//         )}\r\n//         {/* {companyInfo?.logo ? (\r\n//           <Avatar>\r\n//             <AvatarImage\r\n//               src={companyInfo.logo}\r\n//               alt={companyInfo.name || \"Company Logo\"}\r\n//               className=\"object-contain\"\r\n//             />\r\n//           </Avatar>\r\n//         ) : (\r\n//           <Avatar>\r\n//             <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n//               {companyInfo?.name ? companyInfo.name.charAt(0) : \"?\"}\r\n//             </span>\r\n//           </Avatar>\r\n//         )} */}\r\n//         <div className=\"ml-4\">\r\n//           {/* <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n//             {companyInfo?.name || \"Unknown Company\"}\r\n//           </h3> */}\r\n//           <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n//             {job?.location}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//       <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n//         {job?.title}\r\n//       </h2>\r\n//       <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n//         {truncateDescription(job?.description, 100)}\r\n//       </p>\r\n//       <div className=\"flex flex-wrap gap-2\">\r\n//         <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n//           {job?.position} Positions\r\n//         </Badge>\r\n//         <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n//           {job?.jobType}\r\n//         </Badge>\r\n//         <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n//           {job?.salary} PKR\r\n//         </Badge>\r\n//         <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n//           {job?.experienceLevel} Experience\r\n//         </Badge>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default JobCard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 844, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/saved-jobs/page.jsx"],"sourcesContent":["// \"use client\";\r\n// import { useSelector } from \"react-redux\";\r\n// import JobCard from \"@/components/JobCard\";\r\n\r\n// const SavedJobs = () => {\r\n//   const savedJobs = useSelector((state) => state.job.savedJobs);\r\n\r\n//   return (\r\n//     <section className=\"wrapper py-8 px-4 sm:px-6 2xl:px-0\">\r\n//       <h1 className=\"text-3xl font-bold mb-6 text-center md:text-left\">\r\n//         Saved <span className=\"text-purple-600\">Jobs</span>\r\n//       </h1>\r\n//       <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n//         {savedJobs?.map((job) => (\r\n//           <JobCard key={job._id} job={job} />\r\n//         ))}\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default SavedJobs;\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport JobCard from \"@/components/JobCard\";\r\n\r\nconst SavedJobs = () => {\r\n  const savedJobs = useSelector((state) => state.job.savedJobs);\r\n  const [jobsWithCompany, setJobsWithCompany] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async () => {\r\n      const updatedJobs = await Promise.all(\r\n        savedJobs.map(async (job) => {\r\n          if (job.company && typeof job.company === \"object\") {\r\n            return job;\r\n          }\r\n\r\n          const response = await fetch(`/api/jobs/${job._id}`);\r\n          const fullJob = await response.json();\r\n          return fullJob;\r\n        })\r\n      );\r\n\r\n      setJobsWithCompany(updatedJobs);\r\n    };\r\n\r\n    fetchJobs();\r\n  }, [savedJobs]);\r\n\r\n  return (\r\n    <section className=\"wrapper py-8 px-4 sm:px-6 2xl:px-0\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center md:text-left\">\r\n        Saved <span className=\"text-purple-600\">Jobs</span>\r\n      </h1>\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n        {jobsWithCompany.map((job) => (\r\n          <JobCard key={job._id} job={job} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SavedJobs;\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAChB,6CAA6C;AAC7C,8CAA8C;AAE9C,4BAA4B;AAC5B,mEAAmE;AAEnE,aAAa;AACb,+DAA+D;AAC/D,0EAA0E;AAC1E,8DAA8D;AAC9D,cAAc;AACd,mEAAmE;AACnE,qCAAqC;AACrC,gDAAgD;AAChD,cAAc;AACd,eAAe;AACf,iBAAiB;AACjB,OAAO;AACP,KAAK;AAEL,4BAA4B;;;;;AAE5B;AAEA;AADA;;;;;AAGA,MAAM,YAAY;IAChB,MAAM,YAAY,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,GAAG,CAAC,SAAS;IAC5D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEzD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,MAAM,cAAc,MAAM,QAAQ,GAAG,CACnC,UAAU,GAAG,CAAC,OAAO;gBACnB,IAAI,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,KAAK,UAAU;oBAClD,OAAO;gBACT;gBAEA,MAAM,WAAW,MAAM,MAAM,CAAC,UAAU,EAAE,IAAI,GAAG,EAAE;gBACnD,MAAM,UAAU,MAAM,SAAS,IAAI;gBACnC,OAAO;YACT;YAGF,mBAAmB;QACrB;QAEA;IACF,GAAG;QAAC;KAAU;IAEd,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;oBAAmD;kCACzD,8OAAC;wBAAK,WAAU;kCAAkB;;;;;;;;;;;;0BAE1C,8OAAC;gBAAI,WAAU;0BACZ,gBAAgB,GAAG,CAAC,CAAC,oBACpB,8OAAC,sHAAA,CAAA,UAAO;wBAAe,KAAK;uBAAd,IAAI,GAAG;;;;;;;;;;;;;;;;AAK/B;uCAEe"}},
    {"offset": {"line": 936, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}