{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/components/JobCard.jsx"],"sourcesContent":["// \"use client\";\r\n// import { Bookmark, BookmarkMinus } from \"lucide-react\";\r\n// import { Button } from \"./ui/button\";\r\n// import { Avatar, AvatarImage } from \"./ui/avatar\";\r\n// import { Badge } from \"./ui/badge\";\r\n// import daysAgoFunction from \"@/lib/daysAgoFunction\";\r\n// import { useRouter } from \"next/navigation\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { toast } from \"sonner\";\r\n// import { addSavedJob, removeSavedJob } from \"@/redux/slices/jobSlice\";\r\n// import axios from \"axios\";\r\n// import { COMPANY_API_ENDPOINT, USER_API_ENDPOINT } from \"@/lib/constant\";\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// const JobCard = ({ job }) => {\r\n//   const router = useRouter();\r\n//   const dispatch = useDispatch();\r\n//   const savedJobs = useSelector((state) => state.job.savedJobs);\r\n//   const isSaved = savedJobs.some((savedJob) => savedJob._id === job._id);\r\n//   const [companyInfo, setCompanyInfo] = useState([]);\r\n\r\n//   console.log(\"companyInfo\", companyInfo);\r\n\r\n//   const fetchCompanyInfo = async () => {\r\n//     try {\r\n//       const res = await axios.get(\r\n//         `${COMPANY_API_ENDPOINT}/get/${job.company}`,\r\n//         {\r\n//           withCredentials: true,\r\n//         }\r\n//       );\r\n//       if (res.data.success) setCompanyInfo(res.data.company);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const truncateDescription = (description, maxLength) => {\r\n//     if (!description) return \"\";\r\n//     if (description.length <= maxLength) {\r\n//       return description;\r\n//     }\r\n//     return description.substring(0, maxLength) + \"...\";\r\n//   };\r\n\r\n//   const handleSaveJob = async () => {\r\n//     try {\r\n//       const token = localStorage.getItem(\"token\");\r\n//       const config = {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//         withCredentials: true,\r\n//       };\r\n\r\n//       if (isSaved) {\r\n//         await axios.post(\r\n//           `${USER_API_ENDPOINT}/delete-saved-job/${job._id}`,\r\n//           {},\r\n//           config\r\n//         );\r\n//         dispatch(removeSavedJob(job._id));\r\n//         toast.success(\"Job removed from saved jobs\");\r\n//       } else {\r\n//         const response = await axios.post(\r\n//           `${USER_API_ENDPOINT}/save-job`,\r\n//           { jobId: job._id },\r\n//           config\r\n//         );\r\n//         dispatch(addSavedJob(response.data.savedJob));\r\n//         toast.success(\"Job saved successfully\");\r\n//       }\r\n//     } catch (error) {\r\n//       toast.error(error.response?.data?.message || \"An error occurred\");\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchCompanyInfo();\r\n//   }, [job.companyId]);\r\n\r\n//   return (\r\n//     <section\r\n//       onClick={() => router.push(`/jobs/${job._id}`)}\r\n//       className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n//     >\r\n//       <div className=\"flex justify-between items-center mb-4\">\r\n//         <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n//           {daysAgoFunction(job?.createdAt) === 0\r\n//             ? \"Today\"\r\n//             : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n//         </span>\r\n//         <Button\r\n//           onClick={(e) => {\r\n//             e.stopPropagation();\r\n//             handleSaveJob();\r\n//           }}\r\n//           variant=\"outline\"\r\n//           className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n//         >\r\n//           {isSaved ? (\r\n//             <>\r\n//               <BookmarkMinus /> Remove\r\n//             </>\r\n//           ) : (\r\n//             <>\r\n//               <Bookmark /> Save\r\n//             </>\r\n//           )}\r\n//         </Button>\r\n//       </div>\r\n//       <div className=\"flex items-center mb-4\">\r\n//         {job.company?.logo ? (\r\n//           <Avatar>\r\n//             <AvatarImage\r\n//               src={job?.company?.logo}\r\n//               alt={job?.company?.name || \"Company Logo\"}\r\n//               className=\"object-contain\"\r\n//             />\r\n//           </Avatar>\r\n//         ) : (\r\n//           <Avatar>\r\n//             <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n//               {job?.company?.name ? job?.company?.name.charAt(0) : \"?\"}\r\n//             </span>\r\n//           </Avatar>\r\n//         )}\r\n//         <div className=\"ml-4\">\r\n//           <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n//             {job?.company?.name || \"Unknown Company\"}\r\n//           </h3>\r\n//           <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n//             {job?.location}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//       <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n//         {job?.title}\r\n//       </h2>\r\n//       <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n//         {truncateDescription(job?.description, 100)}\r\n//       </p>\r\n//       <div className=\"flex flex-wrap gap-2\">\r\n//         <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n//           {job?.position} Positions\r\n//         </Badge>\r\n//         <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n//           {job?.jobType}\r\n//         </Badge>\r\n//         <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n//           {job?.salary} PKR\r\n//         </Badge>\r\n//         <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n//           {job?.experienceLevel} Experience\r\n//         </Badge>\r\n//       </div>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default JobCard;\r\n\r\nconst JobCard = ({ job }) => {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const savedJobs = useSelector((state) => state.job.savedJobs);\r\n  const isSaved = savedJobs.some((savedJob) => savedJob._id === job._id);\r\n  const [companyInfo, setCompanyInfo] = useState(null); // Initialize as null\r\n\r\n  console.log(\"companyInfo\", companyInfo); // Debugging line\r\n\r\n  const fetchCompanyInfo = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${COMPANY_API_ENDPOINT}/get/${job.company}`,\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      );\r\n      if (res.data.success) setCompanyInfo(res.data.company);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const truncateDescription = (description, maxLength) => {\r\n    if (!description) return \"\";\r\n    if (description.length <= maxLength) {\r\n      return description;\r\n    }\r\n    return description.substring(0, maxLength) + \"...\";\r\n  };\r\n\r\n  const handleSaveJob = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        withCredentials: true,\r\n      };\r\n\r\n      if (isSaved) {\r\n        await axios.post(\r\n          `${USER_API_ENDPOINT}/delete-saved-job/${job._id}`,\r\n          {},\r\n          config\r\n        );\r\n        dispatch(removeSavedJob(job._id));\r\n        toast.success(\"Job removed from saved jobs\");\r\n      } else {\r\n        const response = await axios.post(\r\n          `${USER_API_ENDPOINT}/save-job`,\r\n          { jobId: job._id },\r\n          config\r\n        );\r\n        dispatch(addSavedJob(response.data.savedJob));\r\n        toast.success(\"Job saved successfully\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"An error occurred\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompanyInfo();\r\n  }, [job.company]); // Correct dependency\r\n\r\n  return (\r\n    <section\r\n      onClick={() => router.push(`/jobs/${job._id}`)}\r\n      className=\"p-5 rounded-lg shadow-md bg-white dark:bg-gray-800 border border-gray-100 dark:border-gray-700 hover:shadow-lg cursor-pointer transition-transform transform hover:scale-105\"\r\n    >\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <span className=\"text-gray-500 dark:text-gray-400 text-sm\">\r\n          {daysAgoFunction(job?.createdAt) === 0\r\n            ? \"Today\"\r\n            : `${daysAgoFunction(job?.createdAt)} days ago`}\r\n        </span>\r\n        <Button\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            handleSaveJob();\r\n          }}\r\n          variant=\"outline\"\r\n          className=\"px-3 py-1 text-gray-700 dark:text-gray-300 hover:bg-purple-600 hover:text-white\"\r\n        >\r\n          {isSaved ? (\r\n            <>\r\n              <BookmarkMinus /> Remove\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Bookmark /> Save\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex items-center mb-4\">\r\n        {companyInfo?.logo ? (\r\n          <Avatar>\r\n            <AvatarImage\r\n              src={companyInfo.logo}\r\n              alt={companyInfo.name || \"Company Logo\"}\r\n              className=\"object-contain\"\r\n            />\r\n          </Avatar>\r\n        ) : (\r\n          <Avatar>\r\n            <span className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              {companyInfo?.name ? companyInfo.name.charAt(0) : \"?\"}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n        <div className=\"ml-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {companyInfo?.name || \"Unknown Company\"}\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 -mt-1\">\r\n            {job?.location}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-xl font-bold mb-2 text-gray-900 dark:text-gray-100\">\r\n        {job?.title}\r\n      </h2>\r\n      <p className=\"text-gray-700 dark:text-gray-400 mb-4\">\r\n        {truncateDescription(job?.description, 100)}\r\n      </p>\r\n      <div className=\"flex flex-wrap gap-2\">\r\n        <Badge className=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-800\">\r\n          {job?.position} Positions\r\n        </Badge>\r\n        <Badge className=\"bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-800\">\r\n          {job?.jobType}\r\n        </Badge>\r\n        <Badge className=\"bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-300 hover:bg-yellow-100 dark:hover:bg-yellow-800\">\r\n          {job?.salary} PKR\r\n        </Badge>\r\n        <Badge className=\"bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-300 hover:bg-purple-100 dark:hover:bg-purple-800\">\r\n          {job?.experienceLevel} Experience\r\n        </Badge>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abali/Desktop/job-portal/frontend/app/saved-jobs/page.jsx"],"sourcesContent":["\"use client\";\r\nimport { useSelector } from \"react-redux\";\r\nimport JobCard from \"@/components/JobCard\";\r\n\r\nconst SavedJobs = () => {\r\n  const savedJobs = useSelector((state) => state.job.savedJobs);\r\n\r\n  return (\r\n    <section className=\"wrapper py-8 px-4 sm:px-6 2xl:px-0\">\r\n      <h1 className=\"text-3xl font-bold mb-6 text-center md:text-left\">\r\n        Saved <span className=\"text-purple-600\">Jobs</span>\r\n      </h1>\r\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n        {savedJobs?.map((job) => (\r\n          <JobCard key={job._id} job={job} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SavedJobs;\r\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIA,MAAM,YAAY;IAChB,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,GAAG,CAAC,SAAS;IAE5D,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;;oBAAmD;kCACzD,8OAAC;wBAAK,WAAU;kCAAkB;;;;;;;;;;;;0BAE1C,8OAAC;gBAAI,WAAU;0BACZ,WAAW,IAAI,CAAC,oBACf,8OAAC,sHAAA,CAAA,UAAO;wBAAe,KAAK;uBAAd,IAAI,GAAG;;;;;;;;;;;;;;;;AAK/B;uCAEe"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}